var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/Album.html",[0,0.075,1,1.327]],["body/classes/Album.html",[0,0.135,1,2.017,2,0.288,3,0.245,4,0.204,5,2.446,6,0.353,7,2.067,8,0.031,9,3.562,10,2.446,11,2.022,12,0.837,13,2.022,14,3.726,15,1.837,16,2.571,17,2.746,18,3.562,19,2.746,20,2.746,21,2.746,22,2.746,23,2.746,24,2.207,25,2.746,26,2.746,27,0.918,28,2.446,29,2.746,30,2.746,31,2.446,32,2.067,33,2.207,34,2.746,35,3.173,36,2.746,37,2.746,38,2.446,39,2.746,40,2.746,41,2.746,42,2.746,43,2.746,44,2.746,45,2.746,46,1.837,47,0.022,48,0.022]],["title/components/AppComponent.html",[49,0.107,50,0.705]],["body/components/AppComponent.html",[0,0.088,2,0.286,3,0.243,4,0.202,6,0.243,8,0.03,12,0.75,47,0.022,48,0.022,49,0.198,50,1.256,51,1.128,52,1.128,53,1.128,54,3.125,55,1.128,56,1.982,57,1.834,58,4.063,59,1.467,60,4.849,61,1.467,62,4.849,63,0.422,64,0.375,65,0.821,66,1.467,67,1.357,68,1.357,69,1.726,70,1.128,71,1.128,72,0.821,73,1.128,74,0.821,75,1.128,76,0.755,77,1.128,78,1.128,79,0.755,80,1.467,81,0.821,82,1.128,83,0.821,84,1.128,85,0.821,86,1.128,87,0.755,88,1.128,89,0.821,90,1.128,91,0.821,92,1.467,93,0.964,94,1.128,95,0.821,96,1.128,97,0.821,98,0.693,99,1.128,100,1.128]],["title/modules/AppModule.html",[101,0.829,102,2.087]],["body/modules/AppModule.html",[0,0.078,2,0.252,3,0.215,4,0.179,6,0.354,8,0.031,32,1.259,47,0.02,48,0.02,50,1.396,63,0.723,64,0.331,65,0.725,87,1.185,101,1.155,102,4.16,103,1.761,104,2.708,105,3.299,106,2.387,107,2.76,108,2.76,109,2.76,110,2.76,111,3.439,112,2.862,113,2.908,114,2.145,115,1.935,116,2.408,117,4.466,118,2.408,119,2.408,120,2.387,121,3.294,122,2.145,123,2.76,124,3.294,125,4.466,126,3.294,127,2.76,128,2.387,129,2.76,130,3.294,131,2.76,132,4.466,133,2.408,134,2.908,135,1.761,136,0.996,137,3.294,138,2.408,139,2.76,140,2.76,141,2.76,142,4.244,143,2.76,144,2.76,145,2.76,146,2.76,147,2.76,148,2.76,149,2.76,150,2.76,151,2.76,152,2.76,153,3.294]],["title/modules/AppRoutingModule.html",[101,0.829,111,1.883]],["body/modules/AppRoutingModule.html",[0,0.102,2,0.332,3,0.283,4,0.235,6,0.377,8,0.031,32,1.656,47,0.024,48,0.024,49,0.145,63,0.682,64,0.436,87,1.079,101,1.121,111,3.133,120,2.85,122,2.822,123,3.631,134,3.473,135,3.087,136,1.311,154,4.333,155,4.839,156,4.333,157,4.333,158,4.468,159,3.631,160,4.333]],["title/classes/Artist.html",[0,0.075,7,1.225]],["body/classes/Artist.html",[0,0.124,1,1.265,2,0.234,3,0.199,4,0.166,5,1.989,6,0.318,7,2.186,8,0.031,9,3.846,10,3.426,11,2.113,12,0.951,13,2.231,14,3.955,15,2.382,16,2.729,17,3.099,18,3.099,19,2.233,20,2.233,21,2.233,22,2.233,23,2.233,24,1.794,25,2.233,26,3.846,27,0.939,28,2.761,29,2.233,30,2.233,31,1.989,32,1.861,33,1.794,34,2.233,35,2.761,36,2.233,37,2.233,38,1.989,39,2.233,40,2.233,41,2.233,42,2.233,43,2.233,44,2.233,45,2.233,46,1.494,47,0.019,48,0.019,161,0.519,162,1.386,163,1.36,164,0.858,165,3.552,166,0.567,167,1.187,168,4.24,169,1.186,170,1.32,171,3.054,172,1.794,173,1.794,174,3.054,175,3.054,176,3.054,177,3.054,178,3.054,179,0.79]],["title/components/AuthComponent.html",[49,0.107,72,0.705]],["body/components/AuthComponent.html",[0,0.056,2,0.182,3,0.155,4,0.129,6,0.155,8,0.031,11,0.841,12,0.655,15,2.452,27,0.851,47,0.016,48,0.016,49,0.168,50,0.524,51,0.72,52,0.72,53,0.72,55,0.72,56,1.859,57,1.719,59,1.072,61,1.072,63,0.568,64,0.239,65,0.524,66,1.072,67,0.991,68,0.991,69,1.418,70,0.72,71,0.72,72,1.032,73,0.72,74,0.524,75,0.72,76,0.482,77,0.72,78,0.72,79,0.482,80,1.072,81,0.524,82,0.72,83,0.524,84,0.72,85,0.524,86,0.72,87,0.482,88,0.72,89,0.524,90,0.72,91,0.524,92,1.072,93,0.615,94,0.72,95,0.524,96,0.72,97,0.524,98,0.786,99,0.72,100,0.72,136,0.72,161,0.404,162,1.158,163,0.615,164,0.717,166,0.442,167,1.132,169,0.666,170,1.119,179,0.615,180,1.994,181,1.072,182,1.384,183,1.592,184,3.543,185,3.543,186,4.2,187,5.255,188,4.689,189,1.533,190,5.255,191,1.994,192,2.009,193,5.255,194,2.446,195,3.543,196,2.38,197,2.38,198,2.38,199,2.38,200,4.689,201,2.38,202,3.545,203,2.38,204,2.38,205,3.979,206,2.38,207,2.38,208,1.55,209,1.994,210,1.74,211,1.74,212,1.272,213,1.069,214,1.994,215,2.38,216,2.38,217,3.543,218,2.38,219,2.38,220,2.38,221,3.543,222,2.38,223,2.38,224,1.994,225,2.38,226,2.38,227,2.38,228,1.55,229,2.38,230,2.38,231,2.38,232,2.38,233,1.592,234,3.543,235,3.543,236,2.59,237,3.543,238,3.543,239,2.968,240,3.543,241,3.543,242,3.543,243,2.307,244,3.543,245,4.403,246,2.968,247,2.968,248,3.543,249,3.543,250,3.543,251,1.894,252,1.894,253,2.082,254,2.59]],["title/injectables/AuthGuard.html",[255,1.133,256,2.343]],["body/injectables/AuthGuard.html",[0,0.085,2,0.277,3,0.236,4,0.196,6,0.236,8,0.031,11,1.278,12,0.735,27,0.807,38,3.095,46,1.769,47,0.022,48,0.022,63,0.681,64,0.364,98,0.672,112,2.324,136,1.094,161,0.614,163,1.229,164,0.962,166,0.672,167,0.962,169,1.33,170,1.135,181,1.094,183,2.135,192,2.155,194,2.753,208,2.355,212,2.837,213,1.625,255,1.876,256,3.474,257,3.03,258,5.857,259,3.617,260,3.617,261,3.617,262,5.638,263,5.309,264,5.638,265,3.617,266,4.753,267,4.753,268,3.03,269,3.617,270,2.355,271,2.644,272,1.769,273,3.03,274,3.617,275,3.03,276,3.617,277,3.617,278,3.617,279,3.617,280,3.617,281,3.617,282,3.617]],["title/injectables/AuthService.html",[192,1.225,255,1.133]],["body/injectables/AuthService.html",[0,0.051,2,0.166,3,0.141,4,0.117,6,0.141,8,0.031,11,2.135,12,0.784,13,2.04,27,1.049,32,2.015,47,0.015,48,0.015,63,0.63,64,0.218,98,1.131,106,2.389,133,1.582,136,0.655,161,0.368,162,1.078,163,1.311,164,0.809,166,0.613,167,1.169,169,1.418,170,0.954,179,0.853,183,1.482,192,1.261,194,2.369,202,3.133,205,3.706,210,1.582,212,2.389,213,0.972,228,2.603,233,1.796,251,1.157,252,2.136,253,1.938,255,1.412,272,1.058,283,1.582,284,3.298,285,3.745,286,3.745,287,3.745,288,3.298,289,3.298,290,3.298,291,3.745,292,3.298,293,1.813,294,3.267,295,2.921,296,3.267,297,3.298,298,2.411,299,2.763,300,2.164,301,2.164,302,2.164,303,2.164,304,2.763,305,2.164,306,3.348,307,2.763,308,2.164,309,2.763,310,2.164,311,2.164,312,2.763,313,2.164,314,2.763,315,1.272,316,3.348,317,1.272,318,1.813,319,1.582,320,1.582,321,1.157,322,2.921,323,2.411,324,1.813,325,1.582,326,3.517,327,3.348,328,1.582,329,2.148,330,1.582,331,1.813,332,1.813,333,1.813,334,1.813,335,1.813,336,3.348,337,1.813,338,1.813,339,2.411,340,1.813,341,1.813,342,2.763,343,2.763,344,1.813,345,1.582,346,1.582,347,1.813,348,1.813,349,1.813,350,1.813,351,1.813,352,2.763,353,1.813,354,2.763,355,1.813,356,2.763,357,2.763,358,2.411,359,2.763,360,2.763,361,1.813,362,1.813,363,1.582,364,1.813,365,1.813]],["title/components/ChartComponent.html",[49,0.107,74,0.705]],["body/components/ChartComponent.html",[0,0.072,2,0.236,3,0.201,4,0.167,6,0.201,7,1.869,8,0.03,12,0.757,27,0.724,47,0.019,48,0.019,49,0.185,50,0.677,51,0.931,52,0.931,53,0.931,55,0.931,56,1.935,57,1.789,59,1.289,61,1.289,63,0.598,64,0.492,65,0.677,66,1.289,67,1.193,68,1.193,69,1.597,70,0.931,71,0.931,72,0.677,73,0.931,74,1.162,75,0.931,76,0.623,77,0.931,78,0.931,79,0.623,80,1.289,81,0.677,82,0.931,83,0.677,84,0.931,85,0.677,86,0.931,87,0.623,88,0.931,89,0.677,90,0.931,91,0.677,92,1.289,93,0.796,94,0.931,95,0.677,96,0.931,97,0.677,98,0.572,99,0.931,100,0.931,161,0.523,163,0.796,164,0.863,166,0.908,167,1.122,169,0.861,170,1.168,179,1.102,181,1.289,182,1.599,189,1.726,233,1.383,243,3.185,366,2.579,367,4.263,368,4.263,369,4.263,370,4.263,371,3.859,372,4.89,373,5.279,374,4.89,375,3.079,376,3.079,377,3.079,378,4.89,379,3.079,380,3.079,381,4.263,382,3.079,383,2.579,384,2.25,385,3.079]],["title/components/ChatBodyComponent.html",[49,0.107,76,0.649]],["body/components/ChatBodyComponent.html",[0,0.061,2,0.198,3,0.168,4,0.14,6,0.168,8,0.031,11,0.912,12,0.802,13,1.568,27,0.754,46,1.263,47,0.017,48,0.017,49,0.173,50,0.568,51,0.781,52,0.781,53,0.781,55,0.781,56,1.884,57,1.743,59,1.138,61,1.138,63,0.552,64,0.378,65,0.568,66,1.138,67,1.052,68,1.052,69,1.475,70,0.781,71,0.781,72,0.568,73,0.781,74,0.568,75,0.781,76,0.987,77,1.689,78,0.781,79,0.523,80,1.138,81,0.568,82,0.781,83,0.568,84,0.781,85,0.568,86,0.781,87,0.523,88,0.781,89,0.568,90,0.781,91,0.568,92,1.138,93,0.668,94,0.781,95,0.568,96,0.781,97,0.568,98,0.479,99,0.781,100,0.781,136,0.781,161,0.438,162,1.23,163,1.148,164,0.761,166,0.479,167,1.131,169,1.242,170,0.898,179,1.148,181,1.138,182,1.451,189,1.594,194,2.51,371,3.244,386,4.796,387,3.728,388,2.163,389,3.762,390,3.762,391,3.762,392,4.086,393,4.343,394,3.152,395,3.762,396,3.176,397,2.582,398,4.534,399,2.732,400,3.762,401,3.152,402,2.582,403,2.582,404,3.762,405,2.582,406,2.582,407,2.582,408,1.887,409,2.582,410,2.582,411,2.582,412,3.152,413,2.582,414,3.762,415,2.582,416,3.762,417,2.582,418,2.582,419,2.582,420,3.762,421,3.762,422,3.762,423,2.582,424,3.762,425,3.762,426,2.582]],["title/components/ChatComponent.html",[49,0.107,79,0.649]],["body/components/ChatComponent.html",[0,0.066,2,0.215,3,0.183,4,0.153,6,0.183,8,0.031,11,0.993,12,0.785,13,0.993,27,0.679,31,1.831,47,0.018,48,0.018,49,0.179,50,0.619,51,0.85,52,0.85,53,0.85,55,0.85,56,1.909,57,1.766,59,1.21,61,1.21,63,0.574,64,0.283,65,0.619,66,1.21,67,1.119,68,1.119,69,1.534,70,0.85,71,0.85,72,0.619,73,0.85,74,0.619,75,0.85,76,0.569,77,1.408,78,0.85,79,1.027,80,1.21,81,0.619,82,0.85,83,0.619,84,0.85,85,0.619,86,0.85,87,0.569,88,0.85,89,0.619,90,0.85,91,0.619,92,1.21,93,0.727,94,0.85,95,0.619,96,0.85,97,0.619,98,1.064,99,0.85,100,0.85,136,0.85,161,0.477,162,1.307,163,1.034,164,0.81,166,0.522,167,1.127,169,1.119,170,0.671,179,1.034,181,1.21,182,1.522,183,2.279,189,1.658,194,2.279,251,2.138,252,1.502,253,1.651,270,1.831,272,1.375,321,1.502,330,2.055,358,2.924,398,2.355,399,2.48,408,2.055,427,2.355,428,3.351,429,3.351,430,5.072,431,4,432,2.811,433,3.901,434,4,435,4,436,2.811,437,4,438,2.811,439,2.355,440,2.811,441,2.811,442,1.831,443,2.811,444,2.811,445,3.901,446,3.351,447,2.811,448,2.811,449,2.811,450,4]],["title/injectables/ChatService.html",[255,1.133,399,1.568]],["body/injectables/ChatService.html",[0,0.056,2,0.183,3,0.156,4,0.13,6,0.156,8,0.031,11,1.774,12,0.726,13,1.498,15,2.074,27,1.036,32,0.912,46,1.167,47,0.016,48,0.016,63,0.596,64,0.24,98,1.04,136,0.722,161,0.405,162,1.161,163,1.214,164,0.719,166,0.443,167,1.211,169,1.314,170,1.121,179,0.918,183,2.364,194,2.448,202,1.555,212,2.51,213,1.073,252,2.683,255,1.498,270,1.555,271,1.745,272,1.167,293,2,294,3.433,295,3.1,296,3.433,298,2.596,315,1.403,317,1.403,320,1.745,322,1.745,323,1.745,326,2.596,329,2.313,346,2.596,392,2,393,5.065,394,2.975,396,2.313,399,1.737,401,2.975,412,2,439,2.975,446,2,451,2,452,4.696,453,4.696,454,4.696,455,4.696,456,4.696,457,3.551,458,3.551,459,3.551,460,2.387,461,2.387,462,2.387,463,2.387,464,3.551,465,2.387,466,3.551,467,2.387,468,2.387,469,2.387,470,4.696,471,2.387,472,2.387,473,2,474,2.387,475,2.387,476,2.387,477,2.387,478,3.551,479,2.387,480,2.387,481,2.387,482,2.387,483,2.387,484,2.387,485,2.387,486,2.387,487,2.387,488,2.387,489,2.387,490,2.387,491,2.387,492,2.387,493,2.387,494,2.387,495,2.387,496,3.551,497,2,498,2,499,1.745,500,2.387,501,2.387,502,2.387,503,2.387,504,2.387,505,2.975,506,2.387,507,2.387,508,2.387,509,2.387,510,2,511,3.551,512,3.551,513,2.387,514,2.387,515,2.387,516,2.387,517,2.387,518,2.387,519,2.387]],["title/modules/CoreModule.html",[101,0.829,112,1.568]],["body/modules/CoreModule.html",[0,0.064,2,0.208,3,0.177,4,0.147,6,0.326,8,0.031,32,1.492,47,0.018,48,0.018,49,0.167,63,0.725,64,0.273,65,0.598,68,0.76,72,1.248,74,1.212,76,0.79,79,0.79,81,1.248,89,1.212,91,1.212,93,1.01,95,1.212,97,1.212,101,1.01,103,1.452,104,2.442,105,1.77,106,2.442,112,3.175,113,2.542,114,1.77,115,1.597,120,2.087,128,3.28,129,2.277,134,1.77,135,2.669,136,0.822,155,4.432,159,2.277,183,1.221,192,2.105,208,1.77,209,3.271,211,1.986,315,1.597,317,1.597,387,1.77,520,2.277,521,2.277,522,2.277,523,2.277,524,2.277,525,2.717,526,2.542,527,1.597,528,2.717,529,3.904,530,1.986,531,2.717,532,1.986,533,2.717,534,2.717,535,2.717,536,2.717,537,2.717,538,1.986,539,2.717,540,3.271,541,3.271,542,2.717,543,2.717,544,2.277,545,3.904,546,2.717,547,3.271,548,2.717,549,2.717,550,2.717,551,2.717]],["title/components/DashboardComponent.html",[49,0.107,81,0.705]],["body/components/DashboardComponent.html",[0,0.055,1,0.963,2,0.178,3,0.152,4,0.126,6,0.152,7,2.211,8,0.031,10,3.019,12,0.768,16,2.496,24,1.367,27,0.709,33,2.047,47,0.016,48,0.016,49,0.166,50,0.512,51,0.704,52,0.704,53,0.704,55,0.704,56,1.852,57,1.713,59,1.054,61,1.054,63,0.473,64,0.234,65,0.512,66,1.054,67,0.975,68,0.975,69,1.402,70,0.704,71,0.704,72,0.512,73,0.704,74,0.512,75,0.704,76,0.471,77,0.704,78,0.704,79,0.471,80,1.054,81,1.02,82,0.704,83,0.512,84,0.704,85,0.512,86,0.704,87,0.471,88,0.704,89,0.512,90,0.704,91,0.512,92,1.054,93,0.602,94,0.704,95,0.512,96,0.704,97,0.512,98,0.432,99,0.704,100,0.704,161,0.395,162,1.139,163,1.08,164,0.705,166,0.432,167,1.125,169,1.168,170,1.29,172,2.047,173,2.047,179,1.08,181,1.054,182,1.365,189,1.515,224,2.919,243,3.874,383,3.884,384,1.701,442,1.515,505,3.884,547,2.919,552,1.949,553,3.483,554,3.483,555,4.636,556,4.636,557,4.636,558,3.483,559,3.483,560,1.949,561,2.724,562,3.483,563,2.326,564,3.483,565,2.326,566,3.483,567,2.326,568,2.326,569,2.326,570,2.326,571,1.949,572,1.949,573,4.965,574,4.965,575,3.483,576,3.483,577,3.483,578,3.483,579,3.483,580,2.326,581,2.326,582,2.326,583,2.326,584,3.483,585,3.483,586,3.483,587,3.483,588,2.919]],["title/modules/DashboardModule.html",[101,0.829,589,2.343]],["body/modules/DashboardModule.html",[0,0.112,2,0.363,3,0.309,4,0.257,6,0.309,8,0.031,47,0.026,48,0.026,63,0.68,64,0.477,101,1.227,104,2.536,120,3.01,526,3.668,527,2.787,589,4.117,590,4.744]],["title/injectables/LastFmService.html",[255,1.133,561,1.883]],["body/injectables/LastFmService.html",[0,0.048,1,0.849,2,0.157,3,0.134,4,0.111,6,0.134,7,2.095,8,0.031,11,1.365,12,0.925,13,2.148,14,2.06,16,0.921,24,1.859,27,1.006,28,2.06,32,0.784,35,1.335,47,0.014,48,0.014,58,1.717,63,0.586,64,0.206,67,0.573,112,1.003,127,1.717,161,0.348,162,1.034,163,1.381,164,0.64,165,2.651,166,0.381,167,1.186,169,1.494,170,1.36,172,2.758,173,2.758,212,3.045,213,0.921,233,1.422,243,3.569,255,1.365,268,1.717,270,1.335,271,1.499,272,1.003,273,1.717,275,1.717,329,1.335,339,2.313,384,1.499,396,1.335,442,1.335,473,1.717,499,2.313,561,1.859,591,4.962,592,1.717,593,4.344,594,4.344,595,4.344,596,4.344,597,3.164,598,3.164,599,3.164,600,3.164,601,2.05,602,4.344,603,3.164,604,3.164,605,3.164,606,2.05,607,3.164,608,2.05,609,3.864,610,3.164,611,2.05,612,3.164,613,2.05,614,2.05,615,3.164,616,2.05,617,3.164,618,2.05,619,3.164,620,2.05,621,2.05,622,3.164,623,2.05,624,3.164,625,2.05,626,3.237,627,1.717,628,2.05,629,2.05,630,2.05,631,1.717,632,2.05,633,2.05,634,2.05,635,2.05,636,2.05,637,2.05,638,2.05,639,2.05,640,2.05,641,2.05,642,2.05,643,2.05,644,3.164,645,2.05,646,3.864,647,3.164,648,3.164,649,3.164,650,3.164,651,2.05,652,2.05,653,2.05,654,2.05,655,2.05,656,2.05,657,2.05]],["title/modules/MaterialModule.html",[101,0.829,658,1.883]],["body/modules/MaterialModule.html",[0,0.09,2,0.294,3,0.25,4,0.208,6,0.322,8,0.031,47,0.023,48,0.023,63,0.739,64,0.386,101,0.993,104,2.053,120,2.641,526,2.501,527,2.256,658,2.903,659,3.84,660,5.464,661,5.464,662,3.217,663,5.464,664,3.84,665,5.464,666,3.84,667,5.969,668,3.84,669,5.464,670,3.84,671,5.464,672,3.84,673,5.464,674,3.84,675,3.84,676,5.464,677,3.84,678,3.84,679,5.464,680,3.217,681,5.464,682,3.84]],["title/components/MenuComponent.html",[49,0.107,83,0.705]],["body/components/MenuComponent.html",[0,0.064,1,1.622,2,0.209,3,0.178,4,0.148,6,0.178,7,1.498,8,0.031,12,0.775,13,1.619,15,2.241,27,0.666,47,0.018,48,0.018,49,0.177,50,0.601,51,0.826,52,0.826,53,0.826,55,0.826,56,1.901,57,1.758,59,1.185,61,1.185,63,0.567,64,0.275,65,0.601,66,1.185,67,1.096,68,1.401,69,1.514,70,0.826,71,0.826,72,0.601,73,0.826,74,0.601,75,0.826,76,0.553,77,0.826,78,0.826,79,0.553,80,1.185,81,0.601,82,0.826,83,1.102,84,0.826,85,0.601,86,0.826,87,0.553,88,0.826,89,0.601,90,0.826,91,0.601,92,1.185,93,0.706,94,0.826,95,0.601,96,0.826,97,0.601,98,0.507,99,1.386,100,0.826,136,0.826,161,0.464,162,1.281,163,1.013,164,0.793,166,0.507,167,1.073,169,1.096,170,1.195,179,1.013,181,1.185,182,1.498,189,1.636,192,2.109,194,2.249,251,2.095,254,2.865,325,2.865,433,3.283,442,1.779,680,2.289,683,2.289,684,5.517,685,3.919,686,3.919,687,5.517,688,5.006,689,3.919,690,2.732,691,2.732,692,3.919,693,2.732,694,2.732,695,2.732,696,2.732,697,5.006,698,2.732,699,3.919,700,2.732,701,2.732,702,2.732,703,2.732,704,3.919,705,3.919,706,3.919,707,3.919,708,3.919,709,5.006,710,3.919,711,3.283]],["title/components/MiniChatComponent.html",[49,0.107,85,0.705]],["body/components/MiniChatComponent.html",[0,0.08,2,0.259,3,0.22,4,0.183,6,0.22,8,0.03,12,0.703,27,0.574,47,0.021,48,0.021,49,0.192,50,0.744,51,1.022,52,1.022,53,1.022,55,1.022,56,1.959,57,1.812,59,1.374,61,1.374,63,0.383,64,0.34,65,0.744,66,1.374,67,1.271,68,1.271,69,1.66,70,1.022,71,1.022,72,0.744,73,1.022,74,0.744,75,1.022,76,0.684,77,1.732,78,1.022,79,0.684,80,1.374,81,0.744,82,1.022,83,0.744,84,1.022,85,1.208,86,1.877,87,0.684,88,1.022,89,0.744,90,1.022,91,0.744,92,1.374,93,0.874,94,1.022,95,0.744,96,1.022,97,0.744,98,0.628,99,1.022,100,1.022,161,0.574,164,0.92,166,0.953,167,0.92,179,0.874,181,1.374,182,1.678,189,1.794,428,3.807,429,3.807,712,4.301,713,3.752,714,2.832,715,3.38,716,3.38,717,3.807]],["title/components/NotFoundComponent.html",[49,0.107,87,0.649]],["body/components/NotFoundComponent.html",[0,0.081,2,0.262,3,0.223,4,0.186,6,0.223,8,0.03,12,0.709,27,0.582,47,0.021,48,0.021,49,0.192,50,0.754,51,1.036,52,1.036,53,1.036,55,1.036,56,1.962,57,1.815,59,1.386,61,1.386,63,0.388,64,0.344,65,0.754,66,1.386,67,1.282,68,1.282,69,1.669,70,1.036,71,1.036,72,0.754,73,1.036,74,0.754,75,1.036,76,0.693,77,1.036,78,1.036,79,0.693,80,1.386,81,0.754,82,1.036,83,0.754,84,1.036,85,0.754,86,1.036,87,1.117,88,1.036,89,0.754,90,1.036,91,0.754,92,1.386,93,0.886,94,1.036,95,0.754,96,1.036,97,0.754,98,0.636,99,1.036,100,1.036,122,3.365,158,3.841,161,0.582,164,0.928,166,0.96,167,0.928,179,0.886,181,1.386,182,1.689,189,1.804,718,4.329,719,2.87,720,4.584,721,4.584,722,4.584,723,3.425,724,3.425,725,4.584]],["title/components/SearchComponent.html",[49,0.107,89,0.705]],["body/components/SearchComponent.html",[0,0.07,2,0.226,3,0.193,4,0.16,6,0.193,8,0.031,12,0.802,13,1.691,27,0.704,33,2.434,46,1.445,47,0.027,48,0.019,49,0.183,50,0.65,51,0.894,52,0.894,53,0.894,55,0.894,56,1.923,57,1.779,59,1.253,61,1.253,63,0.587,64,0.297,65,0.65,66,1.253,67,1.159,68,1.159,69,1.569,70,0.894,71,0.894,72,0.65,73,0.894,74,0.65,75,0.894,76,0.598,77,0.894,78,0.894,79,0.598,80,1.253,81,0.65,82,0.894,83,0.65,84,0.894,85,0.65,86,0.894,87,0.598,88,0.894,89,1.141,90,0.894,91,0.65,92,1.253,93,0.764,94,0.894,95,0.65,96,0.894,97,0.65,98,0.549,99,0.894,100,0.894,161,0.502,162,1.354,163,1.071,164,0.839,166,0.549,167,1.105,169,1.159,170,0.989,172,1.736,173,1.736,179,1.071,181,1.253,182,1.564,189,1.695,213,1.328,233,1.862,272,1.445,371,2.16,396,1.925,445,2.476,499,3.029,560,2.476,561,3.047,571,2.476,572,2.476,588,3.472,626,4.009,726,2.476,727,4.144,728,4.144,729,5.186,730,4.144,731,4.144,732,2.955,733,4.144,734,2.955,735,2.955,736,2.955,737,2.955,738,2.955,739,2.955,740,2.955,741,2.955]],["title/modules/SharedModule.html",[101,0.829,128,1.713]],["body/modules/SharedModule.html",[0,0.07,2,0.229,3,0.195,4,0.162,6,0.34,8,0.031,47,0.019,48,0.019,63,0.731,64,0.301,65,0.658,76,1.264,79,1.264,83,1.374,85,1.25,101,1.08,103,1.598,104,2.573,105,1.947,106,2.573,113,2.72,114,1.947,115,1.756,118,2.185,120,2.233,128,3.475,134,2.72,136,0.904,183,1.343,315,1.756,317,1.756,387,1.947,399,2.779,408,2.185,526,2.72,527,1.756,540,3.5,541,3.5,544,2.505,658,3.668,713,3.054,742,2.505,743,2.505,744,2.505,745,2.505,746,2.505,747,2.99,748,2.99,749,2.99,750,4.815,751,2.99,752,4.177,753,2.99,754,2.99,755,2.99,756,2.99,757,2.99,758,4.815,759,2.99,760,4.815,761,2.99,762,2.99,763,2.99]],["title/components/TopArtisTracksComponent.html",[49,0.107,91,0.705]],["body/components/TopArtisTracksComponent.html",[0,0.077,1,1.836,2,0.25,3,0.213,4,0.177,6,0.213,8,0.03,12,0.903,16,1.992,27,0.554,47,0.02,48,0.02,49,0.189,50,0.717,51,0.986,52,0.986,53,0.986,55,0.986,56,1.95,57,1.803,59,1.341,61,1.341,63,0.369,64,0.328,65,0.717,66,1.341,67,1.24,68,1.24,69,1.635,70,0.986,71,0.986,72,0.717,73,0.986,74,0.717,75,0.986,76,0.66,77,0.986,78,0.986,79,0.66,80,1.341,81,0.717,82,0.986,83,0.717,84,0.986,85,0.717,86,0.986,87,0.66,88,0.986,89,0.717,90,0.986,91,1.19,92,1.837,93,1.649,94,0.986,95,0.717,96,0.986,97,0.717,98,0.605,99,0.986,100,0.986,161,0.554,164,0.897,166,0.936,167,0.897,179,0.843,181,1.341,182,1.647,189,1.768,532,3.683,764,3.683,765,2.731,766,4.434,767,4.434,768,3.26,769,3.26,770,4.434,771,4.434]],["title/components/TopArtistComponent.html",[49,0.107,95,0.705]],["body/components/TopArtistComponent.html",[0,0.08,2,0.259,3,0.22,4,0.183,6,0.22,7,2.098,8,0.03,12,0.703,27,0.574,47,0.021,48,0.021,49,0.192,50,0.744,51,1.022,52,1.022,53,1.022,55,1.022,56,1.959,57,1.812,59,1.374,61,1.374,63,0.383,64,0.34,65,0.744,66,1.374,67,1.271,68,1.271,69,1.66,70,1.022,71,1.022,72,0.744,73,1.022,74,0.744,75,1.022,76,0.684,77,1.022,78,1.022,79,0.684,80,1.374,81,0.744,82,1.022,83,0.744,84,1.022,85,0.744,86,1.022,87,0.684,88,1.022,89,0.744,90,1.022,91,0.744,92,1.897,93,0.874,94,1.022,95,1.208,96,1.022,97,0.744,98,0.628,99,1.022,100,1.022,161,0.574,164,0.92,166,0.953,167,0.92,179,0.874,181,1.374,182,1.678,189,1.794,530,3.752,717,3.807,764,3.752,772,2.832,773,4.544,774,4.544,775,3.38,776,3.38]],["title/classes/Track.html",[0,0.075,16,1.44]],["body/classes/Track.html",[0,0.133,1,1.497,2,0.277,3,0.236,4,0.196,5,2.355,6,0.346,7,2.239,8,0.031,9,3.474,10,2.355,11,1.992,12,0.906,13,1.992,14,3.915,15,1.769,16,2.631,17,3.474,18,3.474,19,2.644,20,2.644,21,2.644,22,2.644,23,2.644,24,2.125,25,2.644,26,2.644,27,0.902,28,2.355,29,2.644,30,2.644,31,2.355,32,2.029,33,2.125,34,2.644,35,3.095,36,2.644,37,2.644,38,2.355,39,2.644,40,2.644,41,2.644,42,2.644,43,2.644,44,2.644,45,2.644,46,1.769,47,0.022,48,0.022,163,0.935,166,0.672,167,0.732,169,1.012,777,3.617]],["title/interfaces/User.html",[98,0.595,321,1.713]],["body/interfaces/User.html",[0,0.058,2,0.19,3,0.162,4,0.135,6,0.162,8,0.031,11,1.95,13,2.215,27,0.981,32,2.109,47,0.017,48,0.017,63,0.654,64,0.25,98,1.12,106,2.319,133,1.815,136,0.751,161,0.422,162,1.195,163,1.464,164,0.503,166,0.461,170,1.274,183,1.643,192,0.949,194,1.95,202,3.593,205,3.499,210,1.815,212,1.954,213,1.116,228,2.826,233,1.95,251,1.327,252,2.852,253,2.148,255,1.292,272,1.214,283,1.815,285,2.08,286,2.08,287,2.08,291,2.08,294,2.672,295,1.815,296,2.672,298,1.815,299,2.08,304,2.08,306,3.063,307,2.08,309,2.08,312,2.08,314,3.063,315,1.459,316,3.635,317,1.459,318,2.08,319,1.815,320,1.815,321,1.954,322,3.901,323,3.73,324,4.01,325,3.499,326,3.73,327,3.635,328,1.815,329,2.381,330,1.815,331,2.08,332,2.08,333,2.08,334,2.08,335,2.08,336,3.635,337,2.08,338,2.08,339,2.672,340,2.08,341,2.08,342,3.063,343,3.063,344,2.08,345,1.815,346,1.815,347,2.08,348,2.08,349,2.08,350,2.08,351,2.08,352,3.063,353,2.08,354,3.063,355,2.08,356,3.063,357,3.063,358,2.672,359,3.063,360,3.063,361,2.08,362,2.08,363,1.815,364,2.08,365,2.08]],["title/components/UserProfileComponent.html",[49,0.107,97,0.705]],["body/components/UserProfileComponent.html",[0,0.07,2,0.228,3,0.195,4,0.162,6,0.195,8,0.03,12,0.744,15,2.04,27,0.507,47,0.019,48,0.019,49,0.183,50,0.657,51,0.902,52,0.902,53,0.902,55,0.902,56,1.926,57,1.782,59,1.262,61,1.262,63,0.472,64,0.3,65,0.657,66,1.262,67,1.167,68,1.167,69,1.575,70,0.902,71,0.902,72,0.657,73,0.902,74,0.657,75,0.902,76,0.604,77,0.902,78,0.902,79,0.604,80,1.262,81,0.657,82,0.902,83,0.657,84,0.902,85,0.657,86,0.902,87,0.604,88,0.902,89,0.657,90,0.902,91,0.657,92,1.262,93,0.772,94,0.902,95,0.657,96,0.902,97,1.146,98,1.082,99,1.455,100,0.902,161,0.507,162,1.364,163,0.772,164,0.844,166,0.554,167,0.974,169,0.835,170,0.996,179,0.772,181,1.262,182,1.572,186,4.592,189,1.702,191,2.5,192,2.17,208,1.943,214,2.5,228,1.943,245,4.757,246,3.495,247,4.363,251,2.23,252,2.23,253,2.451,254,3.049,538,3.807,711,4.363,778,4.363,779,2.5,780,4.172,781,4.172,782,2.984,783,2.984,784,2.984,785,2.984,786,3.495,787,2.984]],["title/coverage.html",[788,3.672]],["body/coverage.html",[0,0.118,1,1.33,4,0.174,5,3.257,7,1.228,8,0.03,16,1.443,47,0.02,48,0.02,49,0.213,50,0.707,54,2.691,72,0.707,74,0.707,76,0.65,79,0.65,81,0.707,83,0.707,85,0.707,87,0.65,89,0.707,91,0.707,93,1.135,95,0.707,97,0.707,98,0.815,116,2.348,122,2.092,138,2.348,170,0.767,180,2.691,192,1.228,233,1.443,236,2.348,255,1.899,256,2.348,257,2.691,283,3.209,321,2.346,328,2.348,366,2.691,386,2.691,387,2.092,388,2.691,399,1.571,427,3.678,451,2.691,510,5.567,530,2.348,532,2.348,538,2.348,552,2.691,561,1.887,591,2.691,592,2.691,683,2.691,712,2.691,713,2.348,714,2.691,718,2.691,719,2.691,726,2.691,764,3.209,765,2.691,772,2.691,778,2.691,779,2.691,788,2.691,789,3.212,790,3.212,791,5.947,792,4.114,793,5.001,794,3.212,795,5.627,796,4.39,797,4.39,798,3.212,799,5.001,800,3.212,801,3.212,802,3.212,803,2.691,804,3.678,805,2.691,806,3.678,807,2.691,808,3.212,809,3.212]],["title/dependencies.html",[103,2.062,810,2.673]],["body/dependencies.html",[8,0.031,47,0.024,48,0.024,64,0.437,103,2.323,118,3.905,119,3.905,131,3.641,136,1.314,211,3.177,213,1.953,319,3.177,527,2.553,662,3.641,811,4.346,812,6.5,813,4.346,814,5.342,815,4.346,816,4.346,817,4.346,818,4.346,819,4.346,820,4.346,821,4.346,822,4.346,823,4.346,824,4.346,825,4.346,826,4.346,827,4.346,828,4.346,829,4.346,830,4.346]],["title/index.html",[161,0.454,786,2.239,831,2.673]],["body/index.html",[3,0.26,4,0.216,8,0.023,12,0.617,47,0.023,48,0.023,49,0.186,57,1.116,115,2.343,233,1.792,345,2.915,497,3.341,498,4.242,627,3.341,832,3.988,833,5.063,834,5.851,835,5.562,836,5.562,837,3.988,838,3.988,839,3.988,840,6.269,841,6.269,842,3.988,843,3.988,844,3.988,845,3.988,846,3.988,847,3.988,848,3.988,849,3.988,850,3.988,851,5.562,852,3.988,853,6.039,854,3.988,855,3.988,856,3.988,857,3.988,858,3.988,859,3.988,860,3.341,861,5.063,862,6.039,863,5.063,864,5.063,865,3.988,866,5.851,867,3.988,868,3.988,869,5.562,870,3.988,871,3.988]],["title/modules.html",[101,1.133]],["body/modules.html",[8,0.026,47,0.026,48,0.026,101,1.234,102,3.108,111,2.804,112,2.334,119,4.403,128,2.551,589,3.489,658,2.804,872,6.023,873,6.023,874,6.444,875,6.023,876,6.023]],["title/overview.html",[877,3.672]],["body/overview.html",[0,0.075,6,0.208,8,0.03,47,0.02,48,0.02,49,0.107,50,1.306,65,0.701,72,1.096,74,1.096,76,1.201,79,1.201,81,1.096,83,1.306,85,1.096,87,1.008,89,1.096,91,1.096,95,1.096,97,1.096,101,1.129,102,4.077,103,1.703,104,1.703,105,2.075,106,1.703,107,2.669,108,2.669,109,2.669,110,2.669,111,2.925,112,3.217,113,2.843,114,2.075,115,1.872,128,3.524,135,1.703,192,1.903,239,2.669,255,1.126,321,1.703,399,2.435,520,2.669,521,2.669,522,2.669,523,2.669,524,2.669,631,2.669,658,3.486,742,2.669,743,2.669,744,2.669,745,2.669,746,2.669,877,2.669,878,3.186,879,3.186,880,3.186,881,3.186]],["title/routes.html",[135,2.343]],["body/routes.html",[8,0.027,47,0.027,48,0.027,135,2.782]],["title/miscellaneous/variables.html",[792,2.82,882,2.239]],["body/miscellaneous/variables.html",[8,0.03,47,0.024,48,0.024,116,2.992,138,4.115,139,3.43,140,3.43,141,3.43,142,4.717,143,3.43,144,3.43,145,3.43,146,3.43,147,3.43,148,3.43,149,3.43,150,3.43,151,3.43,152,3.43,161,0.695,170,1.41,172,3.47,173,3.47,236,4.115,363,3.762,792,2.992,803,3.43,804,5.205,805,3.43,806,3.43,807,4.717,860,4.312,882,3.43,883,5.147,884,4.093,885,4.093,886,4.093,887,4.093,888,4.093,889,6.212,890,4.093]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":510,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["0.0.41",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":505,"title":{},"body":{"injectables/ChatService.html":{},"components/DashboardComponent.html":{}}}],["1..50",{"_index":633,"title":{},"body":{"injectables/LastFmService.html":{}}}],["10",{"_index":632,"title":{},"body":{"injectables/LastFmService.html":{}}}],["13",{"_index":878,"title":{},"body":{"overview.html":{}}}],["2",{"_index":631,"title":{},"body":{"injectables/LastFmService.html":{},"overview.html":{}}}],["2.0.8",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":240,"title":{},"body":{"components/AuthComponent.html":{}}}],["3",{"_index":880,"title":{},"body":{"overview.html":{}}}],["3b523",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["3b523.appspot.com",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["3b523.firebaseapp.com",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["3b523.firebaseio.com",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":879,"title":{},"body":{"overview.html":{}}}],["404",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{}}}],["5",{"_index":630,"title":{},"body":{"injectables/LastFmService.html":{}}}],["5.0.0",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":239,"title":{},"body":{"components/AuthComponent.html":{},"overview.html":{}}}],["6.0.0",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":838,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":881,"title":{},"body":{"overview.html":{}}}],["716018657308",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":224,"title":{},"body":{"components/AuthComponent.html":{},"components/DashboardComponent.html":{}}}],["9])(?=.*[a",{"_index":220,"title":{},"body":{"components/AuthComponent.html":{}}}],["_a",{"_index":687,"title":{},"body":{"components/MenuComponent.html":{}}}],["_auth",{"_index":186,"title":{},"body":{"components/AuthComponent.html":{},"components/UserProfileComponent.html":{}}}],["_chatservic",{"_index":435,"title":{},"body":{"components/ChatComponent.html":{}}}],["_http",{"_index":604,"title":{},"body":{"injectables/LastFmService.html":{}}}],["_router",{"_index":433,"title":{},"body":{"components/ChatComponent.html":{},"components/MenuComponent.html":{}}}],["a.payload.doc.data",{"_index":481,"title":{},"body":{"injectables/ChatService.html":{}}}],["a.payload.doc.id",{"_index":483,"title":{},"body":{"injectables/ChatService.html":{}}}],["accessor",{"_index":201,"title":{},"body":{"components/AuthComponent.html":{}}}],["activatedrout",{"_index":398,"title":{},"body":{"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{}}}],["activatedroute.params.subscribe(param",{"_index":411,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["activatedroutesnapshot",{"_index":262,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_compon",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["addpag",{"_index":383,"title":{},"body":{"components/ChartComponent.html":{},"components/DashboardComponent.html":{}}}],["address",{"_index":237,"title":{},"body":{"components/AuthComponent.html":{}}}],["af",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["afauth",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["afs.collection('convers",{"_index":477,"title":{},"body":{"injectables/ChatService.html":{}}}],["aizasyd04j1hqmn6uzvxjktcqmbrnhux6x0hvcq",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":1,"title":{"classes/Album.html":{}},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/TopArtisTracksComponent.html":{},"classes/Track.html":{},"coverage.html":{}}}],["alreadi",{"_index":249,"title":{},"body":{"components/AuthComponent.html":{}}}],["angular",{"_index":835,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":527,"title":{},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/LastFmService.html":{}}}],["angular/compil",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":211,"title":{},"body":{"components/AuthComponent.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":662,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/material/autocomplet",{"_index":672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":677,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":682,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":680,"title":{},"body":{"modules/MaterialModule.html":{},"components/MenuComponent.html":{}}}],["angular/material/slid",{"_index":674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/MenuComponent.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{}}}],["angularfire2/databas",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["angularfire2/firestor",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{}}}],["angularfire2/storag",{"_index":753,"title":{},"body":{"modules/SharedModule.html":{}}}],["angularfireauth",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["angularfireauthmodul",{"_index":540,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["angularfiredatabas",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["angularfiredatabasemodul",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(firebaseconfig",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["angularfirestoragemodul",{"_index":752,"title":{},"body":{"modules/SharedModule.html":{}}}],["angularfirestorecollect",{"_index":470,"title":{},"body":{"injectables/ChatService.html":{}}}],["angularfirestoredocu",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["angularfirestoremodul",{"_index":541,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["api[1].track",{"_index":586,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api[5].nam",{"_index":584,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api_key",{"_index":593,"title":{},"body":{"injectables/LastFmService.html":{}}}],["api_key=32a63d8e1c209d6f83211a00f8cc838",{"_index":619,"title":{},"body":{"injectables/LastFmService.html":{}}}],["apikey",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.modul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":50,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":111,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arctic",{"_index":635,"title":{},"body":{"injectables/LastFmService.html":{}}}],["arctic+monkey",{"_index":637,"title":{},"body":{"injectables/LastFmService.html":{}}}],["array",{"_index":502,"title":{},"body":{"injectables/ChatService.html":{}}}],["arti",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["artifact",{"_index":854,"title":{},"body":{"index.html":{}}}],["artist",{"_index":7,"title":{"classes/Artist.html":{}},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/ChartComponent.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"coverage.html":{}}}],["artist'},{'nam",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["artist.compon",{"_index":531,"title":{},"body":{"modules/CoreModule.html":{}}}],["artist.component.css",{"_index":773,"title":{},"body":{"components/TopArtistComponent.html":{}}}],["artist.component.html",{"_index":774,"title":{},"body":{"components/TopArtistComponent.html":{}}}],["artist.component.t",{"_index":772,"title":{},"body":{"components/TopArtistComponent.html":{},"coverage.html":{}}}],["artist.component.ts:12",{"_index":776,"title":{},"body":{"components/TopArtistComponent.html":{}}}],["artist.component.ts:8",{"_index":775,"title":{},"body":{"components/TopArtistComponent.html":{}}}],["artist/top",{"_index":530,"title":{},"body":{"modules/CoreModule.html":{},"components/TopArtistComponent.html":{},"coverage.html":{}}}],["artistspag",{"_index":555,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":587,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{}}}],["auth'},{'nam",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.component.css",{"_index":184,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":185,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.facebookauthprovid",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["auth.githubauthprovid",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["auth.googleauthprovid",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["authcompon",{"_index":72,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authdomain",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":256,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":250,"title":{},"body":{"components/AuthComponent.html":{}}}],["authservic",{"_index":192,"title":{"injectables/AuthService.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automat",{"_index":846,"title":{},"body":{"index.html":{}}}],["avail",{"_index":876,"title":{},"body":{"modules.html":{}}}],["between",{"_index":238,"title":{},"body":{"components/AuthComponent.html":{}}}],["bodi",{"_index":389,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body'},{'nam",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["body.compon",{"_index":544,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["body.component.css",{"_index":390,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.html",{"_index":391,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.t",{"_index":388,"title":{},"body":{"components/ChatBodyComponent.html":{},"coverage.html":{}}}],["body.component.ts:13",{"_index":407,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.ts:14",{"_index":406,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.ts:16",{"_index":400,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.ts:27",{"_index":403,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.ts:31",{"_index":402,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body.component.ts:39",{"_index":405,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["body/chat",{"_index":387,"title":{},"body":{"components/ChatBodyComponent.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["boolean",{"_index":267,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["bootstrap",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["brows",{"_index":874,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":751,"title":{},"body":{"modules/SharedModule.html":{}}}],["browseranimationsmodul",{"_index":750,"title":{},"body":{"modules/SharedModule.html":{}}}],["browsermodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":853,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":258,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(next",{"_index":261,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["catch(err",{"_index":518,"title":{},"body":{"injectables/ChatService.html":{}}}],["chang",{"_index":848,"title":{},"body":{"index.html":{}}}],["changes.map(a",{"_index":480,"title":{},"body":{"injectables/ChatService.html":{}}}],["char",{"_index":241,"title":{},"body":{"components/AuthComponent.html":{}}}],["chart",{"_index":367,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart'},{'nam",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["chart.component.css",{"_index":368,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.component.html",{"_index":369,"title":{},"body":{"components/ChartComponent.html":{}}}],["chartartist",{"_index":10,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/DashboardComponent.html":{},"classes/Track.html":{}}}],["chartcompon",{"_index":74,"title":{"components/ChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charttrack",{"_index":556,"title":{},"body":{"components/DashboardComponent.html":{}}}],["charturl",{"_index":594,"title":{},"body":{"injectables/LastFmService.html":{}}}],["chat",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["chat'},{'nam",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["chat.compon",{"_index":756,"title":{},"body":{"modules/SharedModule.html":{}}}],["chat.component.css",{"_index":428,"title":{},"body":{"components/ChatComponent.html":{},"components/MiniChatComponent.html":{}}}],["chat.component.html",{"_index":429,"title":{},"body":{"components/ChatComponent.html":{},"components/MiniChatComponent.html":{}}}],["chat.component.t",{"_index":714,"title":{},"body":{"components/MiniChatComponent.html":{},"coverage.html":{}}}],["chat.component.ts:12",{"_index":716,"title":{},"body":{"components/MiniChatComponent.html":{}}}],["chat.component.ts:8",{"_index":715,"title":{},"body":{"components/MiniChatComponent.html":{}}}],["chat/chat",{"_index":755,"title":{},"body":{"modules/SharedModule.html":{}}}],["chat/chat.compon",{"_index":754,"title":{},"body":{"modules/SharedModule.html":{}}}],["chat/mini",{"_index":713,"title":{},"body":{"components/MiniChatComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["chatbodycompon",{"_index":76,"title":{"components/ChatBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatcompon",{"_index":79,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatroom",{"_index":512,"title":{},"body":{"injectables/ChatService.html":{}}}],["chatrout",{"_index":545,"title":{},"body":{"modules/CoreModule.html":{}}}],["chatservic",{"_index":399,"title":{"injectables/ChatService.html":{}},"body":{"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"index.html":{}}}],["children",{"_index":550,"title":{},"body":{"modules/CoreModule.html":{}}}],["class",{"_index":0,"title":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":836,"title":{},"body":{"index.html":{}}}],["close",{"_index":689,"title":{},"body":{"components/MenuComponent.html":{}}}],["close(reason",{"_index":692,"title":{},"body":{"components/MenuComponent.html":{}}}],["cluster_appmodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":520,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":521,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_export",{"_index":523,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_import",{"_index":522,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_provid",{"_index":524,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":742,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":743,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":745,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":744,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_provid",{"_index":746,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":849,"title":{},"body":{"index.html":{}}}],["collect",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{}}}],["common",{"_index":450,"title":{},"body":{"components/ChatComponent.html":{}}}],["commonmodul",{"_index":526,"title":{},"body":{"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["complet",{"_index":508,"title":{},"body":{"injectables/ChatService.html":{}}}],["compodoc",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":49,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["connect",{"_index":245,"title":{},"body":{"components/AuthComponent.html":{},"components/UserProfileComponent.html":{}}}],["consol",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["console.error(error",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["console.log('access",{"_index":280,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('next",{"_index":579,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(err",{"_index":519,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(r",{"_index":31,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/ChatComponent.html":{},"classes/Track.html":{}}}],["console.log(track",{"_index":22,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["const",{"_index":32,"title":{},"body":{"classes/Album.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"injectables/LastFmService.html":{},"classes/Track.html":{},"interfaces/User.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_auth",{"_index":191,"title":{},"body":{"components/AuthComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_chatservic",{"_index":432,"title":{},"body":{"components/ChatComponent.html":{}}}],["constructor(_http",{"_index":601,"title":{},"body":{"injectables/LastFmService.html":{}}}],["constructor(_rout",{"_index":690,"title":{},"body":{"components/MenuComponent.html":{}}}],["constructor(activatedrout",{"_index":397,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["constructor(afauth",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["constructor(auth",{"_index":259,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(lf",{"_index":560,"title":{},"body":{"components/DashboardComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(nam",{"_index":17,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["constructor(priv",{"_index":46,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"injectables/AuthGuard.html":{},"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{},"components/SearchComponent.html":{},"classes/Track.html":{}}}],["constructor(protect",{"_index":442,"title":{},"body":{"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{}}}],["constructor(publ",{"_index":214,"title":{},"body":{"components/AuthComponent.html":{},"components/UserProfileComponent.html":{}}}],["context",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conv",{"_index":430,"title":{},"body":{"components/ChatComponent.html":{}}}],["convers",{"_index":452,"title":{},"body":{"injectables/ChatService.html":{}}}],["core",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["core.modul",{"_index":268,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LastFmService.html":{}}}],["core/core.modul",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module#coremodul",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/services/auth.servic",{"_index":701,"title":{},"body":{"components/MenuComponent.html":{}}}],["coremodul",{"_index":112,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/LastFmService.html":{},"modules.html":{},"overview.html":{}}}],["coverag",{"_index":788,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":514,"title":{},"body":{"injectables/ChatService.html":{}}}],["createdat",{"_index":490,"title":{},"body":{"injectables/ChatService.html":{}}}],["customnam",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["dashboard",{"_index":547,"title":{},"body":{"modules/CoreModule.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'nam",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["dashboard.component.css",{"_index":553,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":554,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/chart/chart.compon",{"_index":534,"title":{},"body":{"modules/CoreModule.html":{}}}],["dashboard/dashboard.compon",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["dashboard/search/search.compon",{"_index":535,"title":{},"body":{"modules/CoreModule.html":{}}}],["dashboard/top",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["dashboardcompon",{"_index":81,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":589,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{}}}],["data",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["data.id",{"_index":482,"title":{},"body":{"injectables/ChatService.html":{}}}],["data.slice(0,4",{"_index":45,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["databas",{"_index":759,"title":{},"body":{"modules/SharedModule.html":{}}}],["databaseurl",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":491,"title":{},"body":{"injectables/ChatService.html":{}}}],["date:'shorttim",{"_index":423,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["date:\\'shorttim",{"_index":426,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["debouncetim",{"_index":736,"title":{},"body":{"components/SearchComponent.html":{}}}],["declar",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decor",{"_index":698,"title":{},"body":{"components/MenuComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"classes/Artist.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":167,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"components/UserProfileComponent.html":{}}}],["deni",{"_index":281,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["depend",{"_index":103,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":843,"title":{},"body":{"index.html":{}}}],["develop",{"_index":839,"title":{},"body":{"index.html":{}}}],["direct",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":852,"title":{},"body":{"index.html":{}}}],["directori",{"_index":857,"title":{},"body":{"index.html":{}}}],["displaynam",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["dist",{"_index":856,"title":{},"body":{"index.html":{}}}],["distinctuntilchang",{"_index":737,"title":{},"body":{"components/SearchComponent.html":{}}}],["document",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["dom",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["dynam",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":771,"title":{},"body":{"components/TopArtisTracksComponent.html":{}}}],["e2",{"_index":867,"title":{},"body":{"index.html":{}}}],["el",{"_index":648,"title":{},"body":{"injectables/LastFmService.html":{}}}],["el.artist.nam",{"_index":653,"title":{},"body":{"injectables/LastFmService.html":{}}}],["el.image[2]['#text",{"_index":650,"title":{},"body":{"injectables/LastFmService.html":{}}}],["el.nam",{"_index":649,"title":{},"body":{"injectables/LastFmService.html":{}}}],["el.uid.indexof(otheruserid",{"_index":506,"title":{},"body":{"injectables/ChatService.html":{}}}],["el.uid.indexof(this.auth.uid",{"_index":504,"title":{},"body":{"injectables/ChatService.html":{}}}],["element",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["email",{"_index":202,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["emaillogin",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["emaillogin(email",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["end",{"_index":866,"title":{},"body":{"index.html":{}}}],["enter",{"_index":235,"title":{},"body":{"components/AuthComponent.html":{}}}],["environ",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["event",{"_index":377,"title":{},"body":{"components/ChartComponent.html":{}}}],["eventemitt",{"_index":378,"title":{},"body":{"components/ChartComponent.html":{}}}],["execut",{"_index":863,"title":{},"body":{"index.html":{}}}],["exist",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["export",{"_index":6,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["facebook",{"_index":247,"title":{},"body":{"components/AuthComponent.html":{},"components/UserProfileComponent.html":{}}}],["facebooklogin",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["fals",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":187,"title":{},"body":{"components/AuthComponent.html":{}}}],["featur",{"_index":760,"title":{},"body":{"modules/SharedModule.html":{}}}],["field",{"_index":678,"title":{},"body":{"modules/MaterialModule.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":473,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LastFmService.html":{}}}],["find",{"_index":474,"title":{},"body":{"injectables/ChatService.html":{}}}],["firebas",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["firebase/app",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["firebase/auth",{"_index":761,"title":{},"body":{"modules/SharedModule.html":{}}}],["firebase/firestor",{"_index":757,"title":{},"body":{"modules/SharedModule.html":{}}}],["firebase/storag",{"_index":762,"title":{},"body":{"modules/SharedModule.html":{}}}],["firebaseconfig",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestor",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["flag",{"_index":859,"title":{},"body":{"index.html":{}}}],["fm",{"_index":642,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.servic",{"_index":572,"title":{},"body":{"components/DashboardComponent.html":{},"components/SearchComponent.html":{}}}],["fm.service.t",{"_index":592,"title":{},"body":{"injectables/LastFmService.html":{},"coverage.html":{}}}],["fm.service.ts:23",{"_index":623,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:24",{"_index":625,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:25",{"_index":620,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:27",{"_index":621,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:28",{"_index":603,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:34",{"_index":616,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:38",{"_index":618,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:49",{"_index":611,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:58",{"_index":608,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:60",{"_index":613,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:70",{"_index":606,"title":{},"body":{"injectables/LastFmService.html":{}}}],["fm.service.ts:74",{"_index":614,"title":{},"body":{"injectables/LastFmService.html":{}}}],["formbuild",{"_index":193,"title":{},"body":{"components/AuthComponent.html":{}}}],["formgroup",{"_index":200,"title":{},"body":{"components/AuthComponent.html":{}}}],["found",{"_index":720,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["found.compon",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":721,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":722,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":719,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":724,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":723,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":549,"title":{},"body":{"modules/CoreModule.html":{}}}],["further",{"_index":868,"title":{},"body":{"index.html":{}}}],["gener",{"_index":834,"title":{},"body":{"index.html":{}}}],["get",{"_index":831,"title":{"index.html":{}},"body":{}}],["getartistinfo",{"_index":597,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getartistinfo(nam",{"_index":605,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getauth",{"_index":454,"title":{},"body":{"injectables/ChatService.html":{}}}],["getchartalbum",{"_index":598,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getchartalbums(pag",{"_index":607,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getchartartist",{"_index":24,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"classes/Track.html":{}}}],["getchartartists(pag",{"_index":610,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getcharttrack",{"_index":599,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getcharttracks(pag",{"_index":612,"title":{},"body":{"injectables/LastFmService.html":{}}}],["getconvers",{"_index":455,"title":{},"body":{"injectables/ChatService.html":{}}}],["getemail",{"_index":203,"title":{},"body":{"components/AuthComponent.html":{}}}],["getmessag",{"_index":394,"title":{},"body":{"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{}}}],["getmessages(thread",{"_index":401,"title":{},"body":{"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{}}}],["getnam",{"_index":26,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["getpassword",{"_index":206,"title":{},"body":{"components/AuthComponent.html":{}}}],["gettrack",{"_index":165,"title":{},"body":{"classes/Artist.html":{},"injectables/LastFmService.html":{}}}],["gettrack(nam",{"_index":581,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gettracks(nam",{"_index":28,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"injectables/LastFmService.html":{},"classes/Track.html":{}}}],["getus",{"_index":456,"title":{},"body":{"injectables/ChatService.html":{}}}],["github",{"_index":248,"title":{},"body":{"components/AuthComponent.html":{}}}],["githublogin",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["go",{"_index":497,"title":{},"body":{"injectables/ChatService.html":{},"index.html":{}}}],["googl",{"_index":246,"title":{},"body":{"components/AuthComponent.html":{},"components/UserProfileComponent.html":{}}}],["googlelogin",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["graph",{"_index":875,"title":{},"body":{"modules.html":{}}}],["guest",{"_index":785,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["guestlogin",{"_index":787,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["hammerj",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleerror(error",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["help",{"_index":869,"title":{},"body":{"index.html":{}}}],["home",{"_index":707,"title":{},"body":{"components/MenuComponent.html":{}}}],["howdi",{"_index":711,"title":{},"body":{"components/MenuComponent.html":{},"components/UserProfileComponent.html":{}}}],["html",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["http://localhost:4200",{"_index":845,"title":{},"body":{"index.html":{}}}],["http://ws.audioscrobbler.com/2.0",{"_index":624,"title":{},"body":{"injectables/LastFmService.html":{}}}],["http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${name}&api_key=32a63d8e1c209d6f83211a00f8cc838e&format=json",{"_index":42,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["http_interceptor",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":602,"title":{},"body":{"injectables/LastFmService.html":{}}}],["httpclientmodul",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.deezer.com/chart/track",{"_index":622,"title":{},"body":{"injectables/LastFmService.html":{}}}],["https://avatars3.githubusercontent.com/u/12459942?s=460&v=4",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["https://samewav",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":14,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"injectables/LastFmService.html":{},"classes/Track.html":{}}}],["implement",{"_index":181,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["import",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["index",{"_index":161,"title":{"index.html":{}},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["inject",{"_index":255,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":628,"title":{},"body":{"injectables/LastFmService.html":{}}}],["input",{"_index":371,"title":{},"body":{"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/SearchComponent.html":{}}}],["input('text",{"_index":409,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["interfac",{"_index":321,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["item",{"_index":372,"title":{},"body":{"components/ChartComponent.html":{}}}],["itemscollect",{"_index":453,"title":{},"body":{"injectables/ChatService.html":{}}}],["join",{"_index":640,"title":{},"body":{"injectables/LastFmService.html":{}}}],["js",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":588,"title":{},"body":{"components/DashboardComponent.html":{},"components/SearchComponent.html":{}}}],["karma",{"_index":865,"title":{},"body":{"index.html":{}}}],["last",{"_index":641,"title":{},"body":{"injectables/LastFmService.html":{}}}],["lastfmservic",{"_index":561,"title":{"injectables/LastFmService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["lastfmurl",{"_index":595,"title":{},"body":{"injectables/LastFmService.html":{}}}],["legend",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["length",{"_index":41,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["lf",{"_index":33,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/DashboardComponent.html":{},"components/SearchComponent.html":{},"classes/Track.html":{}}}],["lf.lastfmurl}?method=artist.gettoptracks&artist=${name}&${lf.api_key}&format=json",{"_index":36,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["line",{"_index":40,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["line:max",{"_index":39,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["link1",{"_index":704,"title":{},"body":{"components/MenuComponent.html":{}}}],["loadchildren",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["log",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["loggedin",{"_index":279,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["login",{"_index":228,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["logout",{"_index":254,"title":{},"body":{"components/AuthComponent.html":{},"components/MenuComponent.html":{},"components/UserProfileComponent.html":{}}}],["map",{"_index":270,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{}}}],["map(r",{"_index":646,"title":{},"body":{"injectables/LastFmService.html":{}}}],["map(us",{"_index":277,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["matautocompletemodul",{"_index":671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":660,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":663,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":48,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":661,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material/material.modul",{"_index":748,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":658,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["matformfieldmodul",{"_index":676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodul",{"_index":681,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":667,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":665,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":697,"title":{},"body":{"components/MenuComponent.html":{}}}],["matsidenavmodul",{"_index":679,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["menu",{"_index":684,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'nam",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["menu.component.css",{"_index":685,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":686,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":749,"title":{},"body":{"modules/SharedModule.html":{}}}],["menucompon",{"_index":83,"title":{"components/MenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["merg",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["messag",{"_index":392,"title":{},"body":{"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{}}}],["messagingsenderid",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["method",{"_index":164,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["mini",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["minichatcompon",{"_index":85,"title":{"components/MiniChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["miscellan",{"_index":882,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model/dashboard.model",{"_index":384,"title":{},"body":{"components/ChartComponent.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{}}}],["modul",{"_index":101,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["monkey",{"_index":636,"title":{},"body":{"injectables/LastFmService.html":{}}}],["more",{"_index":870,"title":{},"body":{"index.html":{}}}],["msg",{"_index":416,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["msg.createdat",{"_index":422,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["msg.messag",{"_index":424,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["msg.sender.displaynam",{"_index":420,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["msg.sender.email",{"_index":421,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["name.includ",{"_index":638,"title":{},"body":{"injectables/LastFmService.html":{}}}],["name.split",{"_index":639,"title":{},"body":{"injectables/LastFmService.html":{}}}],["namsjkdfhiusdbfsdbfsdbfbdkfbiusdf",{"_index":770,"title":{},"body":{"components/TopArtisTracksComponent.html":{}}}],["navig",{"_index":844,"title":{},"body":{"index.html":{}}}],["need",{"_index":758,"title":{},"body":{"modules/SharedModule.html":{}}}],["new",{"_index":233,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":38,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"injectables/AuthGuard.html":{},"classes/Track.html":{}}}],["ng",{"_index":841,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DashboardModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":189,"title":{},"body":{"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["notfoundcompon",{"_index":87,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifi",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["null",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"interfaces/User.html":{}}}],["number",{"_index":243,"title":{},"body":{"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{}}}],["o_ooop",{"_index":725,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["oauthlogin",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauthlogin(provid",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["object",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":212,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"interfaces/User.html":{}}}],["of(nul",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["on",{"_index":242,"title":{},"body":{"components/AuthComponent.html":{}}}],["oninit",{"_index":182,"title":{},"body":{"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["onsearchtyp",{"_index":730,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsearchtype(text",{"_index":733,"title":{},"body":{"components/SearchComponent.html":{}}}],["option",{"_index":163,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/SearchComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["otheruserid",{"_index":439,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":373,"title":{},"body":{"components/ChartComponent.html":{}}}],["overview",{"_index":877,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":810,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":609,"title":{},"body":{"injectables/LastFmService.html":{}}}],["param['threadid",{"_index":413,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["paramet",{"_index":169,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/SearchComponent.html":{},"classes/Track.html":{},"components/UserProfileComponent.html":{}}}],["password",{"_index":205,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["path",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["pathmatch",{"_index":548,"title":{},"body":{"modules/CoreModule.html":{}}}],["photourl",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["pipe",{"_index":275,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LastFmService.html":{}}}],["pipe(map(data",{"_index":44,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["pipe(map(responc",{"_index":644,"title":{},"body":{"injectables/LastFmService.html":{}}}],["pleas",{"_index":234,"title":{},"body":{"components/AuthComponent.html":{}}}],["privat",{"_index":11,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"classes/Track.html":{},"interfaces/User.html":{}}}],["prod",{"_index":858,"title":{},"body":{"index.html":{}}}],["product",{"_index":860,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.compon",{"_index":539,"title":{},"body":{"modules/CoreModule.html":{}}}],["profile.component.css",{"_index":780,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":781,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.t",{"_index":779,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:11",{"_index":784,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:13",{"_index":783,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:9",{"_index":782,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/us",{"_index":538,"title":{},"body":{"modules/CoreModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":833,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["promis",{"_index":266,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":162,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/SearchComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["protect",{"_index":410,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["protractor",{"_index":627,"title":{},"body":{"injectables/LastFmService.html":{},"index.html":{}}}],["provid",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"overview.html":{}}}],["providedin",{"_index":273,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LastFmService.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/ChatService.html":{},"components/MenuComponent.html":{},"classes/Track.html":{},"components/UserProfileComponent.html":{}}}],["rc.10",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":445,"title":{},"body":{"components/ChatComponent.html":{},"components/SearchComponent.html":{}}}],["reactiveformsmodul",{"_index":209,"title":{},"body":{"components/AuthComponent.html":{},"modules/CoreModule.html":{}}}],["readm",{"_index":871,"title":{},"body":{"index.html":{}}}],["reason",{"_index":694,"title":{},"body":{"components/MenuComponent.html":{}}}],["redirect",{"_index":511,"title":{},"body":{"injectables/ChatService.html":{}}}],["redirectto",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["ref",{"_index":487,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderby('createdat')).valuechang",{"_index":488,"title":{},"body":{"injectables/ChatService.html":{}}}],["refactor",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["reload",{"_index":847,"title":{},"body":{"index.html":{}}}],["requir",{"_index":236,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.filter((us",{"_index":448,"title":{},"body":{"components/ChatComponent.html":{}}}],["res.filter(el",{"_index":503,"title":{},"body":{"injectables/ChatService.html":{}}}],["res.map(el",{"_index":647,"title":{},"body":{"injectables/LastFmService.html":{}}}],["res.uid)).subscrib",{"_index":444,"title":{},"body":{"components/ChatComponent.html":{}}}],["res['toptracks']['track",{"_index":657,"title":{},"body":{"injectables/LastFmService.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["responce.artists.artist",{"_index":645,"title":{},"body":{"injectables/LastFmService.html":{}}}],["responce.tracks.track",{"_index":652,"title":{},"body":{"injectables/LastFmService.html":{}}}],["result",{"_index":47,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["root",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/LastFmService.html":{}}}],["root'},{'nam",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["rout",{"_index":135,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":194,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{}}}],["routermodul",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(rout",{"_index":551,"title":{},"body":{"modules/CoreModule.html":{}}}],["routermodule.forroot(rout",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":264,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["run",{"_index":840,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":213,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":272,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{},"interfaces/User.html":{}}}],["same",{"_index":705,"title":{},"body":{"components/MenuComponent.html":{}}}],["samewav",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["scaffold",{"_index":850,"title":{},"body":{"index.html":{}}}],["search",{"_index":499,"title":{},"body":{"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{}}}],["search'},{'nam",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["search(text",{"_index":615,"title":{},"body":{"injectables/LastFmService.html":{}}}],["search.component.css",{"_index":727,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":728,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcompon",{"_index":89,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["send",{"_index":425,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["sender",{"_index":492,"title":{},"body":{"injectables/ChatService.html":{}}}],["sendmessag",{"_index":457,"title":{},"body":{"injectables/ChatService.html":{}}}],["sendmessage(text",{"_index":464,"title":{},"body":{"injectables/ChatService.html":{}}}],["sendmsg",{"_index":395,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["sendmsg(text",{"_index":404,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["serv",{"_index":842,"title":{},"body":{"index.html":{}}}],["server",{"_index":498,"title":{},"body":{"injectables/ChatService.html":{},"index.html":{}}}],["services/auth.servic",{"_index":208,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"modules/CoreModule.html":{},"components/UserProfileComponent.html":{}}}],["services/chat.servic",{"_index":408,"title":{},"body":{"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/SharedModule.html":{}}}],["services/last",{"_index":571,"title":{},"body":{"components/DashboardComponent.html":{},"components/SearchComponent.html":{}}}],["set",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["setuserdoc",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuserdoc(us",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["shared/chat/chat",{"_index":543,"title":{},"body":{"modules/CoreModule.html":{}}}],["shared/chat/chat.compon",{"_index":542,"title":{},"body":{"modules/CoreModule.html":{}}}],["shared/shared.modul",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["sharedmodul",{"_index":128,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shownext",{"_index":370,"title":{},"body":{"components/ChartComponent.html":{}}}],["shownext(addpag",{"_index":381,"title":{},"body":{"components/ChartComponent.html":{}}}],["shownextartistsslid",{"_index":558,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shownextartistsslide(addpag",{"_index":564,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shownextslid",{"_index":374,"title":{},"body":{"components/ChartComponent.html":{}}}],["shownexttracksslid",{"_index":559,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shownexttracksslide(addpag",{"_index":566,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sidenav",{"_index":688,"title":{},"body":{"components/MenuComponent.html":{}}}],["sign",{"_index":709,"title":{},"body":{"components/MenuComponent.html":{}}}],["signout",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["signup",{"_index":190,"title":{},"body":{"components/AuthComponent.html":{}}}],["signupform",{"_index":188,"title":{},"body":{"components/AuthComponent.html":{}}}],["social",{"_index":227,"title":{},"body":{"components/AuthComponent.html":{}}}],["song",{"_index":708,"title":{},"body":{"components/MenuComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Album.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/LastFmService.html":{},"modules/MaterialModule.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.t",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.module.t",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/core/core.module.t",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/dashboard/chart/chart.component.t",{"_index":366,"title":{},"body":{"components/ChartComponent.html":{},"coverage.html":{}}}],["src/app/core/dashboard/chart/chart.component.ts:13",{"_index":376,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/app/core/dashboard/chart/chart.component.ts:15",{"_index":379,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/app/core/dashboard/chart/chart.component.ts:16",{"_index":382,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/app/core/dashboard/chart/chart.component.ts:18",{"_index":375,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/app/core/dashboard/chart/chart.component.ts:22",{"_index":380,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.t",{"_index":552,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:13",{"_index":569,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:14",{"_index":570,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:16",{"_index":568,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:17",{"_index":562,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:24",{"_index":563,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:33",{"_index":565,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.component.ts:49",{"_index":567,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/core/dashboard/dashboard.module.t",{"_index":590,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/core/dashboard/search/search.component.t",{"_index":726,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/core/dashboard/search/search.component.ts:13",{"_index":735,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/core/dashboard/search/search.component.ts:14",{"_index":731,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/core/dashboard/search/search.component.ts:20",{"_index":732,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/core/dashboard/search/search.component.ts:23",{"_index":734,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/core/dashboard/top",{"_index":764,"title":{},"body":{"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"coverage.html":{}}}],["src/app/core/model/dashboard.model.t",{"_index":5,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{},"coverage.html":{}}}],["src/app/core/model/dashboard.model.ts:19",{"_index":177,"title":{},"body":{"classes/Artist.html":{}}}],["src/app/core/model/dashboard.model.ts:2",{"_index":174,"title":{},"body":{"classes/Artist.html":{}}}],["src/app/core/model/dashboard.model.ts:21",{"_index":178,"title":{},"body":{"classes/Artist.html":{}}}],["src/app/core/model/dashboard.model.ts:33",{"_index":777,"title":{},"body":{"classes/Track.html":{}}}],["src/app/core/model/dashboard.model.ts:4",{"_index":176,"title":{},"body":{"classes/Artist.html":{}}}],["src/app/core/model/dashboard.model.ts:5",{"_index":175,"title":{},"body":{"classes/Artist.html":{}}}],["src/app/core/model/dashboard.model.ts:6",{"_index":168,"title":{},"body":{"classes/Artist.html":{}}}],["src/app/core/services/auth.service.t",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:101",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:117",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:26",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:50",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:55",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:60",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:73",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:88",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/last",{"_index":591,"title":{},"body":{"injectables/LastFmService.html":{},"coverage.html":{}}}],["src/app/core/users/auth.guard.t",{"_index":257,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/users/auth.guard.ts:12",{"_index":260,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/core/users/auth.guard.ts:17",{"_index":265,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/core/users/auth/auth.component.t",{"_index":180,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/core/users/auth/auth.component.ts:14",{"_index":195,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/auth/auth.component.ts:16",{"_index":198,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/auth/auth.component.ts:17",{"_index":199,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/auth/auth.component.ts:20",{"_index":196,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/auth/auth.component.ts:39",{"_index":204,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/auth/auth.component.ts:40",{"_index":207,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/auth/auth.component.ts:43",{"_index":197,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/core/users/us",{"_index":778,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/not",{"_index":718,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/chat/chat",{"_index":386,"title":{},"body":{"components/ChatBodyComponent.html":{},"coverage.html":{}}}],["src/app/shared/chat/chat.component.t",{"_index":427,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/shared/chat/chat.component.ts:17",{"_index":440,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/shared/chat/chat.component.ts:18",{"_index":441,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/shared/chat/chat.component.ts:19",{"_index":434,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/shared/chat/chat.component.ts:26",{"_index":436,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/shared/chat/chat.component.ts:40",{"_index":438,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/shared/chat/mini",{"_index":712,"title":{},"body":{"components/MiniChatComponent.html":{},"coverage.html":{}}}],["src/app/shared/material/material.module.t",{"_index":659,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/menu/menu.component.t",{"_index":683,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/menu/menu.component.ts:13",{"_index":700,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/menu/menu.component.ts:16",{"_index":693,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/menu/menu.component.ts:18",{"_index":691,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/menu/menu.component.ts:21",{"_index":696,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/menu/menu.component.ts:23",{"_index":695,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/services/chat.service.t",{"_index":451,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/shared/services/chat.service.ts:11",{"_index":471,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:12",{"_index":469,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:14",{"_index":472,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:15",{"_index":468,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:16",{"_index":459,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:33",{"_index":461,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:37",{"_index":460,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:41",{"_index":463,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:45",{"_index":462,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:49",{"_index":465,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/services/chat.service.ts:62",{"_index":467,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/shared/shared.module.t",{"_index":747,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.t",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":786,"title":{"index.html":{}},"body":{"components/UserProfileComponent.html":{}}}],["startdirectthread",{"_index":458,"title":{},"body":{"injectables/ChatService.html":{}}}],["startdirectthread(otheruserid",{"_index":466,"title":{},"body":{"injectables/ChatService.html":{}}}],["startthread",{"_index":431,"title":{},"body":{"components/ChatComponent.html":{}}}],["startthread(otheruserid",{"_index":437,"title":{},"body":{"components/ChatComponent.html":{}}}],["state",{"_index":263,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["statement",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":9,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["storag",{"_index":763,"title":{},"body":{"modules/SharedModule.html":{}}}],["storagebucket",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":855,"title":{},"body":{"index.html":{}}}],["str",{"_index":596,"title":{},"body":{"injectables/LastFmService.html":{}}}],["string",{"_index":13,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"injectables/AuthService.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/SearchComponent.html":{},"classes/Track.html":{},"interfaces/User.html":{}}}],["styleurl",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["subject",{"_index":626,"title":{},"body":{"injectables/LastFmService.html":{},"components/SearchComponent.html":{}}}],["submit",{"_index":244,"title":{},"body":{"components/AuthComponent.html":{}}}],["subscribe(r",{"_index":30,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["succes",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["support",{"_index":872,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":873,"title":{},"body":{"modules.html":{}}}],["swave",{"_index":832,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{}}}],["switchmap(us",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["tabl",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":271,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{}}}],["take(1",{"_index":276,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["take(1)).subscrib",{"_index":507,"title":{},"body":{"injectables/ChatService.html":{}}}],["tap",{"_index":269,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["tap(loggedin",{"_index":278,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["templat",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["term",{"_index":729,"title":{},"body":{"components/SearchComponent.html":{}}}],["test",{"_index":862,"title":{},"body":{"index.html":{}}}],["text",{"_index":396,"title":{},"body":{"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{}}}],["text.valu",{"_index":419,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["then((credenti",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["then(docref",{"_index":516,"title":{},"body":{"injectables/ChatService.html":{}}}],["this._auth.emaillogin(this.email.valu",{"_index":231,"title":{},"body":{"components/AuthComponent.html":{}}}],["this._chatservice.getauth().pipe(map(r",{"_index":443,"title":{},"body":{"components/ChatComponent.html":{}}}],["this._chatservice.getusers().subscrib",{"_index":447,"title":{},"body":{"components/ChatComponent.html":{}}}],["this._chatservice.startdirectthread(otheruserid",{"_index":449,"title":{},"body":{"components/ChatComponent.html":{}}}],["this._http.get(`${this.lastfmurl}?method=artist.getinfo&artist=${this.validatename(name)}&${this.api_key}&format=json",{"_index":654,"title":{},"body":{"injectables/LastFmService.html":{}}}],["this._http.get(`${this.lastfmurl}?method=chart.gettopartists&limit=5&page=${page}&${this.api_key}&format=json",{"_index":643,"title":{},"body":{"injectables/LastFmService.html":{}}}],["this._http.get(`${this.lastfmurl}?method=chart.gettoptracks&limit=5&page=${page}&${this.api_key}&format=json",{"_index":651,"title":{},"body":{"injectables/LastFmService.html":{}}}],["this._http.get(`${this.lastfmurl}?method=track.search&track=${this.validatename(text)}&${this.api_key}&format=json",{"_index":634,"title":{},"body":{"injectables/LastFmService.html":{}}}],["this._http.get(url",{"_index":656,"title":{},"body":{"injectables/LastFmService.html":{}}}],["this._injector.get(httpclient).get(url",{"_index":43,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this._injector.get(lastfmservic",{"_index":34,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this._lastfmservice.getchartartist",{"_index":25,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this._lastfmservice.gettracks(nam",{"_index":29,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this.afauth.auth.createuserwithemailandpassword(email",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.afauth.auth.signinwithpopup(provid",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.afauth.auth.signout().then",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.afauth.authstate.pip",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.afauth.us",{"_index":484,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afs.collection('conversations').add",{"_index":515,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afs.collection('conversations').doc(thread).collection('messages').add",{"_index":489,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afs.collection('users').valuechang",{"_index":485,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afs.collection(`conversations`).doc(thread).collection('messag",{"_index":486,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afs.doc(`users/${user.uid",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.afs.doc(`users/${user.uid}`).valuechang",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.api[0].tracks.push(tr",{"_index":583,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.artistspag",{"_index":573,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth",{"_index":446,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["this.auth.displaynam",{"_index":493,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.auth.email",{"_index":494,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.auth.photourl",{"_index":495,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.auth.uid",{"_index":496,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.auth.us",{"_index":274,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.chartartist",{"_index":576,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.charttrack",{"_index":578,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.chatservice.getmessages(thread).subscrib",{"_index":415,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["this.chatservice.sendmessage(text.valu",{"_index":418,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["this.convers",{"_index":478,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.conversations.pipe(map((r",{"_index":501,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.fb.group",{"_index":216,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.getauth().subscrib",{"_index":475,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.getmessages(this.thread",{"_index":414,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["this.gettracks(name).subscribe(track",{"_index":21,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this.handleerror(error",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.img",{"_index":19,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this.itemscollect",{"_index":476,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.itemscollection.snapshotchanges().pipe(map(chang",{"_index":479,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.lastfmurl}?method=artist.gettoptracks&artist=${this.validatename(name)}&${this.api_key}&format=json",{"_index":655,"title":{},"body":{"injectables/LastFmService.html":{}}}],["this.lfs.getchartartist",{"_index":580,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.lfs.getchartartists(this.artistspage).subscrib",{"_index":575,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.lfs.getcharttracks(this.trackspage).subscrib",{"_index":577,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.lfs.gettracks(name).subscribe(tr",{"_index":582,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.lfs.search(text).subscribe(r",{"_index":740,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.messag",{"_index":417,"title":{},"body":{"components/ChatBodyComponent.html":{}}}],["this.nam",{"_index":18,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this.oauthlogin(provid",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.onsearchtype(term",{"_index":739,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.password.valu",{"_index":232,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.result",{"_index":741,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.router.navig",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['/auth",{"_index":282,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.navigate(['/dashboard",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.router.navigate([`/direct/thread/${docref.id",{"_index":517,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.router.navigate([`/direct/thread/${this.thread[0].id",{"_index":513,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.shownextslide.emit(addpag",{"_index":385,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.sidenav.clos",{"_index":703,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.signupform",{"_index":215,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signupform.get('email",{"_index":229,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.signupform.get('password",{"_index":230,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.term$.subscribe(term",{"_index":738,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.thread",{"_index":412,"title":{},"body":{"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{}}}],["this.thread.length",{"_index":509,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.track",{"_index":20,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this.tracks.push(track",{"_index":23,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["this.trackspag",{"_index":574,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.updateuserdata(credential.us",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.us",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/User.html":{}}}],["thread",{"_index":393,"title":{},"body":{"components/ChatBodyComponent.html":{},"injectables/ChatService.html":{}}}],["thread/:threadid",{"_index":546,"title":{},"body":{"modules/CoreModule.html":{}}}],["through",{"_index":500,"title":{},"body":{"injectables/ChatService.html":{}}}],["timeinterv",{"_index":629,"title":{},"body":{"injectables/LastFmService.html":{}}}],["todo",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LastFmService.html":{},"interfaces/User.html":{}}}],["toggl",{"_index":675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["top",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["topartistcompon",{"_index":95,"title":{"components/TopArtistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["topartistrackscompon",{"_index":91,"title":{"components/TopArtisTracksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":16,"title":{"classes/Track.html":{}},"body":{"classes/Album.html":{},"classes/Artist.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/TopArtisTracksComponent.html":{},"classes/Track.html":{},"coverage.html":{}}}],["track.nam",{"_index":585,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tracks'},{'nam",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["tracks.compon",{"_index":533,"title":{},"body":{"modules/CoreModule.html":{}}}],["tracks.component.css",{"_index":766,"title":{},"body":{"components/TopArtisTracksComponent.html":{}}}],["tracks.component.html",{"_index":767,"title":{},"body":{"components/TopArtisTracksComponent.html":{}}}],["tracks.component.t",{"_index":765,"title":{},"body":{"components/TopArtisTracksComponent.html":{},"coverage.html":{}}}],["tracks.component.ts:12",{"_index":769,"title":{},"body":{"components/TopArtisTracksComponent.html":{}}}],["tracks.component.ts:8",{"_index":768,"title":{},"body":{"components/TopArtisTracksComponent.html":{}}}],["tracks/top",{"_index":532,"title":{},"body":{"modules/CoreModule.html":{},"components/TopArtisTracksComponent.html":{},"coverage.html":{}}}],["trackspag",{"_index":557,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tree",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":37,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"classes/Track.html":{}}}],["type",{"_index":170,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/MenuComponent.html":{},"components/SearchComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":252,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["unit",{"_index":861,"title":{},"body":{"index.html":{}}}],["up",{"_index":710,"title":{},"body":{"components/MenuComponent.html":{}}}],["updateuserdata",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdata(us",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["url",{"_index":35,"title":{},"body":{"classes/Album.html":{},"classes/Artist.html":{},"injectables/LastFmService.html":{},"classes/Track.html":{}}}],["us",{"_index":851,"title":{},"body":{"index.html":{}}}],["user",{"_index":98,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["user.displaynam",{"_index":251,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["user.email",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/User.html":{}}}],["user.photourl",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["user.uid",{"_index":253,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["userprofilecompon",{"_index":97,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userref",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["userref.set(data",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users/auth/auth.compon",{"_index":536,"title":{},"body":{"modules/CoreModule.html":{}}}],["users/us",{"_index":537,"title":{},"body":{"modules/CoreModule.html":{}}}],["valid",{"_index":210,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["validatenam",{"_index":600,"title":{},"body":{"injectables/LastFmService.html":{}}}],["validatename(nam",{"_index":617,"title":{},"body":{"injectables/LastFmService.html":{}}}],["validators.email",{"_index":218,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.maxlength(25",{"_index":226,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.minlength(6",{"_index":225,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.pattern('^(?=.*[0",{"_index":219,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.requir",{"_index":217,"title":{},"body":{"components/AuthComponent.html":{}}}],["valu",{"_index":173,"title":{},"body":{"classes/Artist.html":{},"components/DashboardComponent.html":{},"injectables/LastFmService.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["variabl",{"_index":792,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":837,"title":{},"body":{"index.html":{}}}],["via",{"_index":864,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":699,"title":{},"body":{"components/MenuComponent.html":{}}}],["viewchild('sidenav",{"_index":702,"title":{},"body":{"components/MenuComponent.html":{}}}],["void",{"_index":179,"title":{},"body":{"classes/Artist.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ChartComponent.html":{},"components/ChatBodyComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/DashboardComponent.html":{},"components/MenuComponent.html":{},"components/MiniChatComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TopArtisTracksComponent.html":{},"components/TopArtistComponent.html":{},"components/UserProfileComponent.html":{}}}],["waw",{"_index":706,"title":{},"body":{"components/MenuComponent.html":{}}}],["work",{"_index":717,"title":{},"body":{"components/MiniChatComponent.html":{},"components/TopArtistComponent.html":{}}}],["ye",{"_index":171,"title":{},"body":{"classes/Artist.html":{}}}],["z0",{"_index":223,"title":{},"body":{"components/AuthComponent.html":{}}}],["z])([a",{"_index":222,"title":{},"body":{"components/AuthComponent.html":{}}}],["za",{"_index":221,"title":{},"body":{"components/AuthComponent.html":{}}}],["zone.j",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Album.html":{"url":"classes/Album.html","title":"class - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/dashboard.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Artist {\n    static chartArtists: Artist[] = [];\n\n    private name: string;\n    private img: string;\n    public tracks?: any;\n\n    constructor(name: string, img: string, tracks?) {\n      this.name = name;\n      this.img = img;\n      this.tracks = tracks;\n    //   this.getTracks(name).subscribe(track => console.log(track) /*this.tracks.push(track)*/);\n    }\n\n    // static getChartArtists() {\n    //     this._lastFmService.getChartArtists();\n    // }\n\n    getName() { return this.name; }\n\n    getTracks(name) {\n      /*  */\n      // return this._lastFmService.getTracks(name)\n      // .subscribe(res => console.log(res));\n      // const lf = this._injector.get(LastFmService);\n      // const url = `${lf.lastFmUrl}?method=artist.gettoptracks&artist=${name}&${lf.api_key}&format=json`;\n      // tslint:disable-next-line:max-line-length\n    //   const url = `http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${name}&api_key=32a63d8e1c209d6f83211a00f8cc838e&format=json`;\n    //   return this._injector.get(HttpClient).get(url); // .pipe(map(data => data.slice(0,4))\n    }\n  }\n\n  export class Track {\n    constructor(private name,\n                private img,\n                private artist) { }\n  }\n\n  export class Album { }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AppRoutingModule } from './app.routes.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { SharedModule } from './shared/shared.module';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreModule } from './core/core.module';\n\nexport const firebaseConfig = {\n    apiKey: 'AIzaSyD04J1HQmN6UzvxJKtcqmBrNHuX6x0hvCQ',\n    authDomain: 'samewave-3b523.firebaseapp.com',\n    databaseURL: 'https://samewave-3b523.firebaseio.com',\n    projectId: 'samewave-3b523',\n    storageBucket: 'samewave-3b523.appspot.com',\n    messagingSenderId: '716018657308'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    CoreModule,\n    RouterModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // SharedModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireDatabaseModule\n  ],\n  exports: [ ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        loadChildren: './core/core.module#CoreModule'\n    },\n    {\n        path: '404',\n        component: NotFoundComponent\n    },\n    {\n        path: '**',\n        redirectTo: '/404'\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Artist.html":{"url":"classes/Artist.html","title":"class - Artist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Artist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/dashboard.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                chartArtists\n                            \n                            \n                                    Private\n                                img\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                tracks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getName\n                            \n                            \n                                getTracks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, img: string, tracks?: )\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/dashboard.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        img\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        tracks\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            chartArtists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartArtists:     Artist[]\n\n                    \n                \n                    \n                        \n                            Type :     Artist[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/dashboard.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            img\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        img:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/dashboard.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/dashboard.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            tracks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tracks:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/dashboard.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/model/dashboard.model.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTracks\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTracks(name: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/model/dashboard.model.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Artist {\n    static chartArtists: Artist[] = [];\n\n    private name: string;\n    private img: string;\n    public tracks?: any;\n\n    constructor(name: string, img: string, tracks?) {\n      this.name = name;\n      this.img = img;\n      this.tracks = tracks;\n    //   this.getTracks(name).subscribe(track => console.log(track) /*this.tracks.push(track)*/);\n    }\n\n    // static getChartArtists() {\n    //     this._lastFmService.getChartArtists();\n    // }\n\n    getName() { return this.name; }\n\n    getTracks(name) {\n      /*  */\n      // return this._lastFmService.getTracks(name)\n      // .subscribe(res => console.log(res));\n      // const lf = this._injector.get(LastFmService);\n      // const url = `${lf.lastFmUrl}?method=artist.gettoptracks&artist=${name}&${lf.api_key}&format=json`;\n      // tslint:disable-next-line:max-line-length\n    //   const url = `http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${name}&api_key=32a63d8e1c209d6f83211a00f8cc838e&format=json`;\n    //   return this._injector.get(HttpClient).get(url); // .pipe(map(data => data.slice(0,4))\n    }\n  }\n\n  export class Track {\n    constructor(private name,\n                private img,\n                private artist) { }\n  }\n\n  export class Album { }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/users/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _auth\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/users/auth/auth.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/users/auth/auth.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/users/auth/auth.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/users/auth/auth.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fb:     FormBuilder\n\n                    \n                \n                    \n                        \n                            Type :     FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/users/auth/auth.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signupForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/users/auth/auth.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/users/auth/auth.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/users/auth/auth.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  signupForm: FormGroup;\n\n  constructor(public _auth: AuthService,\n              public fb: FormBuilder,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      'email': ['', [\n        Validators.required,\n        Validators.email\n        ]\n      ],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25),\n        Validators.required\n        ]\n      ]\n    });\n  }\n\n  // social login\n\n  get email() { return this.signupForm.get('email'); }\n  get password() { return this.signupForm.get('password'); }\n\n\n  signup() {\n    return this._auth.emailLogin(this.email.value, this.password.value);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n\n\n\n\n  \n      \n    New User Signup\n  \n    Email\n    \n    \n\n    \n        Please, enter require email address!\n    \n  \n    Password\n    \n  \n    \n      Password must be between 6 and 24 chars and have at least one number \n    \n  \n    Submit\n  \n  \n  \n\n\n   Connect Google\n\n\n   Connect Facebook\n\n\n   Connect Github\n\n\n\n\n\n\n\n\n  Already authorized as {{ user.displayName }}\n  \n  UID: {{ user.uid }}\n  Logout\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              New User Signup      Email                    Please, enter require email address!          Password                Password must be between 6 and 24 chars and have at least one number           Submit         Connect Google   Connect Facebook   Connect Github  Already authorized as {{ user.displayName }}    UID: {{ user.uid }}  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/users/auth.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/users/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/users/auth.guard.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CoreModule } from '../core.module';\nimport { tap, map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: CoreModule\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService,\n              private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this.auth.user\n    .pipe(\n      take(1),\n      map(user => !!user),\n      tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('access denied');\n          this.router.navigate(['/auth']);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin\n                            \n                            \n                                facebookLogin\n                            \n                            \n                                githubLogin\n                            \n                            \n                                googleLogin\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                oAuthLogin\n                            \n                            \n                                    Private\n                                setUserDoc\n                            \n                            \n                                signOut\n                            \n                            \n                                    Private\n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, afs: AngularFirestore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailLogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            githubLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngithubLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oAuthLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        oAuthLogin(provider: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setUserDoc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUserDoc(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateUserData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateUserData(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase/app';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap} from 'rxjs/operators';\n\ninterface User {\n  uid: string;\n  email: string;\n  photoURL?: string;\n  displayName?: string;\n  customName?: string;\n  collections?: any;\n}\n\n\n@Injectable()\nexport class AuthService {\n\n  user: Observable;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router) {\n\n      //// Get auth data, then get firestore user document || null\n      this.user = this.afAuth.authState.pipe(\n        switchMap(user => {\n          if (user) {\n            return this.afs.doc(`users/${user.uid}`).valueChanges();\n          } else {\n            return of(null);\n          }\n        })\n      );\n    }\n\n  googleLogin() {\n    const provider = new auth.GoogleAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  githubLogin() {\n    const provider = new auth.GithubAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  facebookLogin() {\n    const provider = new auth.FacebookAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  emailLogin(email: string, password: string) {\n    // TODO: refactor this method\n    // email and password is valid\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n    .then((credential) => {\n      this.updateUserData(credential.user);\n     })\n      .catch(\n      // Should to check password and logIn if user exist\n        error => this.handleError(error)\n      );\n  }\n\n  private oAuthLogin(provider) {\n    return this.afAuth.auth.signInWithPopup(provider)\n      .then((credential) => {\n        this.updateUserData(credential.user);\n        this.router.navigate(['/dashboard']);\n      });\n  }\n\n    // If error, console log and notify user\n    private handleError(error) {\n      // TODO: Notify user\n      console.error(error);\n    }\n\n    // Sets user data to firestore after succesful login\n    private setUserDoc(user) {\n\n      const userRef: AngularFirestoreDocument = this.afs.doc(`users/${user.uid}`);\n\n      const data: User = {\n        uid: user.uid,\n        email: user.email || null,\n        photoURL: 'https://avatars3.githubusercontent.com/u/12459942?s=460&v=4'\n      };\n      return userRef.set(data);\n    }\n\n\n  private updateUserData(user) {\n    // Sets user data to firestore on login\n\n    const userRef: AngularFirestoreDocument = this.afs.doc(`users/${user.uid}`);\n\n    const data: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL || 'https://avatars3.githubusercontent.com/u/12459942?s=460&v=4'\n    };\n\n    return userRef.set(data, { merge: true });\n\n  }\n\n  signOut() {\n    this.afAuth.auth.signOut().then(() => {\n        this.router.navigate(['/']);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartComponent.html":{"url":"components/ChartComponent.html","title":"component - ChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/dashboard/chart/chart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chart\n            \n\n            \n                styleUrls\n                chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chart.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showNext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                showNextSlide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/dashboard/chart/chart.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                            \n                            Type:    Artist[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/dashboard/chart/chart.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        showNextSlide\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/dashboard/chart/chart.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/chart/chart.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowNext(addPage: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/chart/chart.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Artist } from '../../model/dashboard.model';\nimport { Input } from '@angular/core';\nimport { Output } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n\n  @Input() items: Artist[];\n\n  @Output() showNextSlide = new EventEmitter();\n  showNext(addPage: number) {\n    this.showNextSlide.emit(addPage);\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatBodyComponent.html":{"url":"components/ChatBodyComponent.html","title":"component - ChatBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/chat/chat-body/chat-body.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-body\n            \n\n            \n                styleUrls\n                chat-body.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat-body.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                            \n                                thread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, router: Router, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/chat/chat-body/chat-body.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                    ChatService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/chat/chat-body/chat-body.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMessages(thread: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/chat/chat-body/chat-body.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thread\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/chat/chat-body/chat-body.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMsg(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/chat/chat-body/chat-body.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messages:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/chat/chat-body/chat-body.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thread\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thread:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/chat/chat-body/chat-body.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChatService } from '../../services/chat.service';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-body',\n  templateUrl: './chat-body.component.html',\n  styleUrls: ['./chat-body.component.css']\n})\nexport class ChatBodyComponent implements OnInit {\n\nthread;\nmessages;\n\n@Input('text') text;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              protected chatService: ChatService) {\n    activatedRoute.params.subscribe(param => {\n      this.thread = param['threadId'];\n      this.getMessages(this.thread);\n    });\n  }\n\n  ngOnInit() {\n    this.getMessages(this.thread);\n  }\n\n  getMessages(thread: string) {\n    this.chatService.getMessages(thread).subscribe(\n      msg => {\n        this.messages = msg;\n      }\n    );\n  }\n\n  sendMsg(text) {\n    this.chatService.sendMessage(text.value, this.thread);\n    text.value = '';\n  }\n\n}\n\n    \n\n    \n        \n  {{msg.sender.displayName || msg.sender.email}}\n  [{{msg.createdAt | date:'shortTime'}}] {{msg.message}}\n\n\n  \n  Send\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{msg.sender.displayName || msg.sender.email}}  [{{msg.createdAt | date:\\'shortTime\\'}}] {{msg.message}}    Send'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/chat/chat.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n            \n                styleUrls\n                chat.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                conv\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                startThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_chatService: ChatService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/chat/chat.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _chatService\n                                                  \n                                                        \n                                                                    ChatService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/chat/chat.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startThread\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartThread(otherUserId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/chat/chat.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        otherUserId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/chat/chat.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        conv:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/chat/chat.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/chat/chat.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChatService } from './../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\ninterface User {\n  uid: string;\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  auth;\n  users;\n  conv;\n\n  constructor(protected _chatService: ChatService,\n              private _router: Router) {\n\n  }\n\n  ngOnInit() {\n\n    this._chatService.getAuth().pipe(map(res => res.uid)).subscribe(\n      res => this.auth = res\n    );\n\n    this._chatService.getUsers().subscribe(\n      res => {\n        this.users = res.filter((user: User) => user.uid !== this.auth);\n        // console.log(res);\n      }\n    );\n  }\n\n  startThread(otherUserId) {\n    this._chatService.startDirectThread(otherUserId);\n  }\n\n}\n\n    \n\n    \n        \n\n  Common\n  \n    {{user.displayName || user.email}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Common      {{user.displayName || user.email}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/chat.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                conversations\n                            \n                            \n                                    Private\n                                itemsCollection\n                            \n                            \n                                thread\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuth\n                            \n                            \n                                getConversations\n                            \n                            \n                                getMessages\n                            \n                            \n                                getUsers\n                            \n                            \n                                sendMessage\n                            \n                            \n                                startDirectThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, afs: AngularFirestore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/chat.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConversations\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConversations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMessages(thread: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thread\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage(text: , thread: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        thread\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDirectThread\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartDirectThread(otherUserId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        otherUserId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conversations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        conversations:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            itemsCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemsCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thread\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thread:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/services/chat.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { filter, switchMap, map, take, find } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ChatService {\n\n  private itemsCollection: AngularFirestoreCollection;\n  conversations: Observable;\n\n  public users;\n  auth;\n  thread;\n\n  constructor(private afAuth: AngularFireAuth,\n              private afs: AngularFirestore,\n              private router: Router) {\n    this.getAuth().subscribe( auth => this.auth = auth);\n    this.itemsCollection = afs.collection('conversations');\n    this.conversations = this.itemsCollection.snapshotChanges().pipe(map(changes => {\n      return changes.map(a => {\n        const data = a.payload.doc.data();\n        data.id = a.payload.doc.id;\n        return data;\n      });\n    })\n    );\n  }\n\n    getConversations() {\n      return this.conversations;\n    }\n\n    getAuth() {\n      return this.afAuth.user;\n    }\n\n    getUsers() {\n      return this.afs.collection('users').valueChanges();\n    }\n\n    getMessages(thread: string) {\n      return this.afs.collection(`conversations`).doc(thread).collection('messages', ref => ref.orderBy('createdAt')).valueChanges();\n    }\n\n    sendMessage(text, thread) {\n      this.afs.collection('conversations').doc(thread).collection('messages').add({\n        createdAt: Date.now(),\n        message: text,\n        sender: {\n          displayName: this.auth.displayName || null,\n          email: this.auth.email || null,\n          photoURL: this.auth.photoURL,\n          uid: this.auth.uid\n        }\n      });\n    }\n\n    startDirectThread(otherUserId) {\n      // get uid of other user\n      // go to server and search through exists threads\n\n      this.conversations.pipe(map((res: Array) => {\n        this.thread = res.filter(el => el.uid.indexOf(this.auth.uid) !== -1 && el.uid.indexOf(otherUserId) !== -1);\n      }), take(1)).subscribe(\n        {\n          complete: () => {\n          // if thread with our uid and other user uid exist\n          if (this.thread.length !== 0) {\n          // return thread and redirect user to chatroom\n            this.router.navigate([`/direct/thread/${this.thread[0].id}`]);\n          } else {\n            // else create this thread\n            this.afs.collection('conversations').add({\n              uid: [this.auth.uid, otherUserId]\n            }) // then return thread and redirect user to chatroom\n            .then(docRef => this.router.navigate([`/direct/thread/${docRef.id}`]))\n            .catch(err => console.log(err));\n          }\n\n          }\n        }\n      );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthComponent->CoreModule\n\n\n\n\n\nChartComponent\n\nChartComponent\n\nCoreModule -->\n\nChartComponent->CoreModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nCoreModule -->\n\nDashboardComponent->CoreModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nCoreModule -->\n\nSearchComponent->CoreModule\n\n\n\n\n\nTopArtisTracksComponent\n\nTopArtisTracksComponent\n\nCoreModule -->\n\nTopArtisTracksComponent->CoreModule\n\n\n\n\n\nTopArtistComponent\n\nTopArtistComponent\n\nCoreModule -->\n\nTopArtistComponent->CoreModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nCoreModule -->\n\nUserProfileComponent->CoreModule\n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nCoreModule->SharedModule \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthComponent\n                            \n                            \n                                ChartComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                SearchComponent\n                            \n                            \n                                TopArtisTracksComponent\n                            \n                            \n                                TopArtistComponent\n                            \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TopArtistComponent } from './dashboard/top-artist/top-artist.component';\nimport { TopArtisTracksComponent } from './dashboard/top-artis-tracks/top-artis-tracks.component';\nimport { ChartComponent } from './dashboard/chart/chart.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchComponent } from './dashboard/search/search.component';\nimport { AuthComponent } from './users/auth/auth.component';\nimport { UserProfileComponent } from './users/user-profile/user-profile.component';\n\nimport { AuthService } from './services/auth.service';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { ChatComponent } from '../shared/chat/chat.component';\nimport { ChatBodyComponent } from '../shared/chat/chat-body/chat-body.component';\n\nconst chatRoutes: Routes = [\n  {\n    path: 'thread/:threadId',\n    component: ChatBodyComponent\n  }\n];\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n},\n  {\n    path: 'auth',\n    component: AuthComponent\n  },\n  {\n    path: 'direct',\n    component: ChatComponent,\n    children: chatRoutes\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [\n    DashboardComponent,\n    TopArtistComponent,\n    TopArtisTracksComponent,\n    ChartComponent,\n    SearchComponent,\n    AuthComponent,\n    UserProfileComponent\n  ],\n  providers: [\n    AuthService\n  ],\n  exports: [\n    SharedModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artistsPage\n                            \n                            \n                                chartArtists\n                            \n                            \n                                chartTracks\n                            \n                            \n                                tracksPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showNextArtistsSlide\n                            \n                            \n                                showNextTracksSlide\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(lfs: LastFmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/dashboard/dashboard.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lfs\n                                                  \n                                                        \n                                                                    LastFmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNextArtistsSlide\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowNextArtistsSlide(addPage: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNextTracksSlide\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowNextTracksSlide(addPage: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artistsPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        artistsPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartArtists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartArtists:     Artist[]\n\n                    \n                \n                    \n                        \n                            Type :     Artist[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartTracks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartTracks:     Track[]\n\n                    \n                \n                    \n                        \n                            Type :     Track[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracksPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tracksPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/dashboard/dashboard.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LastFmService } from '../services/last-fm.service';\nimport { Artist, Album, Track } from '../model/dashboard.model';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  chartArtists: Artist[] = [];\n  chartTracks: Track[] = [];\n\n  artistsPage: number;\n  tracksPage: number;\n\n  constructor(protected lfs: LastFmService) {\n      this.artistsPage = 1;\n      this.tracksPage = 1;\n   }\n\n  ngOnInit() {\n    this.lfs.getChartArtists(this.artistsPage).subscribe(\n      artists => this.chartArtists = artists\n    );\n    this.lfs.getChartTracks(this.tracksPage).subscribe(\n      tracks => this.chartTracks = tracks\n    );\n  }\n\n  showNextArtistsSlide(addPage: number) {\n    this.artistsPage += addPage;\n    if (this.artistsPage  9) {\n      this.artistsPage = 1;\n    }\n    console.log('next ' + this.artistsPage);\n    this.lfs.getChartArtists(this.artistsPage).subscribe(\n      artists => {\n\n        this.chartArtists = artists;\n      }\n    );\n  }\n\n  showNextTracksSlide(addPage: number) {\n    this.tracksPage += addPage;\n    if (this.tracksPage  9) {\n      this.tracksPage = 1;\n    }\n    console.log('next ' + this.tracksPage);\n    this.lfs.getChartTracks(this.tracksPage).subscribe(\n      artists => {\n\n        this.chartTracks = artists;\n      }\n    );\n  }\n\n  // getChartArtists() {\n  //   this.lfs.getChartArtists();\n  // }\n\n  // getTrack(name) {\n  //   this.lfs.getTracks(name).subscribe(tr => this.api[0].tracks.push(tr));\n  // }\n\n}\n\n    \n\n    \n        \n    {{api[5].name}}\n    \n    \n        {{track.name}}\n        \n    \n     tracks {{ api[1].tracks | async | json }}\n -->\n\n    \n        \n    \n    \n        \n                \n    \n\n\n    \n\n\n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{api[5].name}}                {{track.name}}                 tracks {{ api[1].tracks | async | json }} -->                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n\n  ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastFmService.html":{"url":"injectables/LastFmService.html","title":"injectable - LastFmService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LastFmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/last-fm.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api_key\n                            \n                            \n                                artists\n                            \n                            \n                                chartUrl\n                            \n                            \n                                lastFmUrl\n                            \n                            \n                                    Private\n                                str$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getArtistInfo\n                            \n                            \n                                getChartAlbums\n                            \n                            \n                                getChartArtists\n                            \n                            \n                                getChartTracks\n                            \n                            \n                                getTracks\n                            \n                            \n                                search\n                            \n                            \n                                validateName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/last-fm.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getArtistInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetArtistInfo(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChartAlbums\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChartAlbums(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChartArtists\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChartArtists(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChartTracks\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChartTracks(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTracks\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTracks(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateName\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateName(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api_key\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api_key:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api_key=32a63d8e1c209d6f83211a00f8cc838e'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        artists:     Artist[]\n\n                    \n                \n                    \n                        \n                            Type :     Artist[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.deezer.com/chart/tracks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastFmUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastFmUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ws.audioscrobbler.com/2.0/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            str$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        str$:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/last-fm.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { element } from 'protractor';\nimport { Injectable, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map, take, timeInterval, filter, every } from 'rxjs/operators';\nimport { Artist, Track, Album } from './../model/dashboard.model';\nimport { CoreModule } from '../core.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LastFmService {\n\n  // TODO: \" то подгружаем следующую\n  // порцию из 5ти следующих или предидущих объектов.\n  // 2) Раз в 10 секунд грузим рандомный объект с артистом в\n  // диапазоне [1..50]из чарта артистов.\n  // В сервисе подтягиваем для него остальную инфу\n  // (альбомы, треки, описание и все, что понадобится).\n\n  chartUrl = 'https://api.deezer.com/chart/tracks';\n  lastFmUrl = 'http://ws.audioscrobbler.com/2.0/';\n  api_key = 'api_key=32a63d8e1c209d6f83211a00f8cc838e';\n\n  artists: Artist[] = [];\n  private str$  = new Subject();\n\n  constructor(protected _http: HttpClient) {\n\n   }\n\n  search(text): Observable {\n    return this._http.get(`${this.lastFmUrl}?method=track.search&track=${this.validateName(text)}&${this.api_key}&format=json`);\n  }\n\n  validateName(name: string): string {\n    // Arctic Monkeys => Arctic+Monkeys\n    return name = name.includes(' ') ?  name.split(' ').join('+') : name;\n  }\n\n  /* TODO:\n    Last FM криво отдает данные и вместо запрашиваемой порции из\n    пяти объектов выплевывает полотно, посему нужно изменить лоику\n    запросов или брать АПИ с другого сервиса\n  */\n\n  getChartArtists(page: number): Observable {\n    return this._http.get(`${this.lastFmUrl}?method=chart.gettopartists&limit=5&page=${page}&${this.api_key}&format=json`)\n               .pipe(map(responce => responce.artists.artist),\n                     map(res => res.map(el => el = {name: el.name,\n                                                    img:  el.image[2]['#text']})\n                     )\n               );\n  }\n\n  getChartAlbums(page: number): Observable { return null; }\n\n  getChartTracks(page: number): Observable {\n    return this._http.get(`${this.lastFmUrl}?method=chart.gettoptracks&limit=5&page=${page}&${this.api_key}&format=json`)\n    .pipe(map(responce => responce.tracks.track),\n          map(res => res.map(el => el = {name: el.name,\n                                         img:  el.image[2]['#text'],\n                                         artist: el.artist.name})\n          )\n    );\n  }\n\n  getArtistInfo(name: string): Observable {\n    return this._http.get(`${this.lastFmUrl}?method=artist.getinfo&artist=${this.validateName(name)}&${this.api_key}&format=json`);\n  }\n\n  getTracks(name: string) {\n    const url = `${this.lastFmUrl}?method=artist.gettoptracks&artist=${this.validateName(name)}&${this.api_key}&format=json`;\n    return this._http.get(url)\n    .pipe(\n      map(res => res['toptracks']['track'])\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatSelectModule,\n    MatListModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatSidenavModule,\n    MatIconModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatSelectModule,\n    MatListModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatSidenavModule,\n    MatIconModule\n  ],\n  declarations: []\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menu/menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _as\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _as: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/menu/menu.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _as\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose(reason: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu/menu.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reason\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/menu/menu.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _as\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _as:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu/menu.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/menu/menu.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AuthService } from './../../core/services/auth.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n\n  close(reason: string) {\n    this.sidenav.close();\n  }\n\n  constructor(protected _router: Router,\n              public _as: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n    Link1\n  \n\n  \n    \n      menu\n    \n  \n -->\n\n\n  \n    \n    Same Wawe\n  \n  \n    Home\n    About\n    \n    Albums\n    Artists\n    Songs\n    \n    \n        \n            \n        \n    \n  \n\n\n\n  Sign in / Sign up\n\n\n\n    Collections\n    Direct\n    \n      Howdy, {{ user.displayName }}\n      \n      Profile\n      Logout\n    \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        Link1              menu       -->          Same Wawe        Home    About        Albums    Artists    Songs                                            Sign in / Sign up    Collections    Direct          Howdy, {{ user.displayName }}            Profile      Logout        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MiniChatComponent.html":{"url":"components/MiniChatComponent.html","title":"component - MiniChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MiniChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/chat/mini-chat/mini-chat.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mini-chat\n            \n\n            \n                styleUrls\n                mini-chat.component.css\n            \n\n\n\n            \n                templateUrl\n                ./mini-chat.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/chat/mini-chat/mini-chat.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/chat/mini-chat/mini-chat.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mini-chat',\n  templateUrl: './mini-chat.component.html',\n  styleUrls: ['./mini-chat.component.css']\n})\nexport class MiniChatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  mini-chat works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  mini-chat works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MiniChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/not-found/not-found.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  [ O_ooops... \n  404\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  [ O_ooops...   404'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/dashboard/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                            \n                                term$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(lfs: LastFmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/dashboard/search/search.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lfs\n                                                  \n                                                        \n                                                                    LastFmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/search/search.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSearchType\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSearchType(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/search/search.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/dashboard/search/search.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            term$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term$:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/dashboard/search/search.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { LastFmService } from '../../services/last-fm.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  results;\n  term$ = new Subject();\n\n  constructor(private lfs: LastFmService) {\n    this.term$.subscribe(term => this.onSearchType(term));\n  }\n\n  ngOnInit() {\n  }\n\n  onSearchType(text: string) {\n    this.lfs.search(text).subscribe(res => this.results = res);\n  }\n\n}\n\n    \n\n    \n         \t\n\n\n  {{results | json}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t  {{results | json}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nChatBodyComponent\n\nChatBodyComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nChatBodyComponent->SharedModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nSharedModule -->\n\nChatComponent->SharedModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nSharedModule -->\n\nMenuComponent->SharedModule\n\n\n\n\n\nMiniChatComponent\n\nMiniChatComponent\n\nSharedModule -->\n\nMiniChatComponent->SharedModule\n\n\n\n\n\nChatBodyComponent \n\nChatBodyComponent \n\nChatBodyComponent  -->\n\nSharedModule->ChatBodyComponent \n\n\n\n\n\nChatComponent \n\nChatComponent \n\nChatComponent  -->\n\nSharedModule->ChatComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nSharedModule->MenuComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nChatService\n\nChatService\n\nSharedModule -->\n\nChatService->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChatBodyComponent\n                            \n                            \n                                ChatComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MiniChatComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ChatService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ChatBodyComponent\n                            \n                            \n                                    ChatComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\nimport { MenuComponent } from './menu/menu.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { ChatComponent } from './chat/chat.component';\nimport { RouterModule } from '@angular/router';\nimport { ChatService } from './services/chat.service';\nimport { ChatBodyComponent } from './chat/chat-body/chat-body.component';\nimport { MiniChatComponent } from './chat/mini-chat/mini-chat.component';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    MaterialModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule // imports firebase/storage only needed for storage features\n  ],\n  providers: [\n    ChatService\n  ],\n  declarations: [\n    MenuComponent,\n    ChatComponent,\n    ChatBodyComponent,\n    MiniChatComponent\n  ],\n  exports: [\n    MaterialModule,\n    MenuComponent,\n    ChatComponent,\n    ChatBodyComponent,\n    BrowserAnimationsModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopArtisTracksComponent.html":{"url":"components/TopArtisTracksComponent.html","title":"component - TopArtisTracksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopArtisTracksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/dashboard/top-artis-tracks/top-artis-tracks.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-artis-tracks\n            \n\n            \n                styleUrls\n                top-artis-tracks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./top-artis-tracks.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/dashboard/top-artis-tracks/top-artis-tracks.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/top-artis-tracks/top-artis-tracks.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-artis-tracks',\n  templateUrl: './top-artis-tracks.component.html',\n  styleUrls: ['./top-artis-tracks.component.css']\n})\nexport class TopArtisTracksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n      \n        namsjkdfhiusdbfsdbfsdbfbdkfbiusdf  e\n        Album\n      \n    \n    \n      name\n      \n    \n    \n      name\n      \n     \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        namsjkdfhiusdbfsdbfsdbfbdkfbiusdf  e        Album                    name                    name           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopArtisTracksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopArtistComponent.html":{"url":"components/TopArtistComponent.html","title":"component - TopArtistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopArtistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/dashboard/top-artist/top-artist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-artist\n            \n\n            \n                styleUrls\n                top-artist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./top-artist.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/dashboard/top-artist/top-artist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/dashboard/top-artist/top-artist.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-artist',\n  templateUrl: './top-artist.component.html',\n  styleUrls: ['./top-artist.component.css']\n})\nexport class TopArtistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  top-artist works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  top-artist works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopArtistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/dashboard.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: , img: , artist: )\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/dashboard.model.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        img\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        artist\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Artist {\n    static chartArtists: Artist[] = [];\n\n    private name: string;\n    private img: string;\n    public tracks?: any;\n\n    constructor(name: string, img: string, tracks?) {\n      this.name = name;\n      this.img = img;\n      this.tracks = tracks;\n    //   this.getTracks(name).subscribe(track => console.log(track) /*this.tracks.push(track)*/);\n    }\n\n    // static getChartArtists() {\n    //     this._lastFmService.getChartArtists();\n    // }\n\n    getName() { return this.name; }\n\n    getTracks(name) {\n      /*  */\n      // return this._lastFmService.getTracks(name)\n      // .subscribe(res => console.log(res));\n      // const lf = this._injector.get(LastFmService);\n      // const url = `${lf.lastFmUrl}?method=artist.gettoptracks&artist=${name}&${lf.api_key}&format=json`;\n      // tslint:disable-next-line:max-line-length\n    //   const url = `http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${name}&api_key=32a63d8e1c209d6f83211a00f8cc838e&format=json`;\n    //   return this._injector.get(HttpClient).get(url); // .pipe(map(data => data.slice(0,4))\n    }\n  }\n\n  export class Track {\n    constructor(private name,\n                private img,\n                private artist) { }\n  }\n\n  export class Album { }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collections\n                                \n                                \n                                            Optional\n                                        customName\n                                \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        photoURL\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collections\n                                    \n                                \n                                \n                                    \n                                        collections:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customName\n                                    \n                                \n                                \n                                    \n                                        customName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase/app';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap} from 'rxjs/operators';\n\ninterface User {\n  uid: string;\n  email: string;\n  photoURL?: string;\n  displayName?: string;\n  customName?: string;\n  collections?: any;\n}\n\n\n@Injectable()\nexport class AuthService {\n\n  user: Observable;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router) {\n\n      //// Get auth data, then get firestore user document || null\n      this.user = this.afAuth.authState.pipe(\n        switchMap(user => {\n          if (user) {\n            return this.afs.doc(`users/${user.uid}`).valueChanges();\n          } else {\n            return of(null);\n          }\n        })\n      );\n    }\n\n  googleLogin() {\n    const provider = new auth.GoogleAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  githubLogin() {\n    const provider = new auth.GithubAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  facebookLogin() {\n    const provider = new auth.FacebookAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  emailLogin(email: string, password: string) {\n    // TODO: refactor this method\n    // email and password is valid\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n    .then((credential) => {\n      this.updateUserData(credential.user);\n     })\n      .catch(\n      // Should to check password and logIn if user exist\n        error => this.handleError(error)\n      );\n  }\n\n  private oAuthLogin(provider) {\n    return this.afAuth.auth.signInWithPopup(provider)\n      .then((credential) => {\n        this.updateUserData(credential.user);\n        this.router.navigate(['/dashboard']);\n      });\n  }\n\n    // If error, console log and notify user\n    private handleError(error) {\n      // TODO: Notify user\n      console.error(error);\n    }\n\n    // Sets user data to firestore after succesful login\n    private setUserDoc(user) {\n\n      const userRef: AngularFirestoreDocument = this.afs.doc(`users/${user.uid}`);\n\n      const data: User = {\n        uid: user.uid,\n        email: user.email || null,\n        photoURL: 'https://avatars3.githubusercontent.com/u/12459942?s=460&v=4'\n      };\n      return userRef.set(data);\n    }\n\n\n  private updateUserData(user) {\n    // Sets user data to firestore on login\n\n    const userRef: AngularFirestoreDocument = this.afs.doc(`users/${user.uid}`);\n\n    const data: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL || 'https://avatars3.githubusercontent.com/u/12459942?s=460&v=4'\n    };\n\n    return userRef.set(data, { merge: true });\n\n  }\n\n  signOut() {\n    this.afAuth.auth.signOut().then(() => {\n        this.router.navigate(['/']);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/users/user-profile/user-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/users/user-profile/user-profile.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/users/user-profile/user-profile.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/users/user-profile/user-profile.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(public _auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n\nHowdy, GUEST\nLogin to get started...\n\n\n   Connect Google\n\n\n   Connect Facebook\n\n\n   Connect Facebook\n\n\n\n\n\n\n\n\n  Howdy, {{ user.displayName }}\n  \n  UID: {{ user.uid }}\n  Logout\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Howdy, GUESTLogin to get started...   Connect Google   Connect Facebook   Connect Facebook  Howdy, {{ user.displayName }}    UID: {{ user.uid }}  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChatBodyComponent', 'selector': 'app-chat-body'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MiniChatComponent', 'selector': 'app-mini-chat'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TopArtisTracksComponent', 'selector': 'app-top-artis-tracks'},{'name': 'TopArtistComponent', 'selector': 'app-top-artist'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                firebaseConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/dashboard/chart/chart.component.ts\n            \n            \n                component\n            \n            \n                ChartComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/core/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/core/dashboard/search/search.component.ts\n            \n            \n                component\n            \n            \n                SearchComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/core/dashboard/top-artis-tracks/top-artis-tracks.component.ts\n            \n            \n                component\n            \n            \n                TopArtisTracksComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/dashboard/top-artist/top-artist.component.ts\n            \n            \n                component\n            \n            \n                TopArtistComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/model/dashboard.model.ts\n            \n            \n                class\n            \n            \n                Album\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/model/dashboard.model.ts\n            \n            \n                class\n            \n            \n                Artist\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/core/model/dashboard.model.ts\n            \n            \n                class\n            \n            \n                Track\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/core/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/core/services/auth.service.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/core/services/last-fm.service.ts\n            \n            \n                injectable\n            \n            \n                LastFmService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/core/users/auth.guard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/users/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/core/users/user-profile/user-profile.component.ts\n            \n            \n                component\n            \n            \n                UserProfileComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/not-found/not-found.component.ts\n            \n            \n                component\n            \n            \n                NotFoundComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/chat/chat-body/chat-body.component.ts\n            \n            \n                component\n            \n            \n                ChatBodyComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/shared/chat/chat.component.ts\n            \n            \n                component\n            \n            \n                ChatComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/shared/chat/chat.component.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/chat/mini-chat/mini-chat.component.ts\n            \n            \n                component\n            \n            \n                MiniChatComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/shared/services/chat.service.ts\n            \n            \n                injectable\n            \n            \n                ChatService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^6.2.0\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            angularfire2 : ^5.0.0-rc.10\n        \n            compodoc : 0.0.41\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.0.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSWave\nThis project was generated with Angular CLI version 6.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nCoreModule->SharedModule \n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nCoreModule -->\n\nAuthComponent->CoreModule\n\n\n\n\n\nChartComponent\n\nChartComponent\n\nCoreModule -->\n\nChartComponent->CoreModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nCoreModule -->\n\nDashboardComponent->CoreModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nCoreModule -->\n\nSearchComponent->CoreModule\n\n\n\n\n\nTopArtisTracksComponent\n\nTopArtisTracksComponent\n\nCoreModule -->\n\nTopArtisTracksComponent->CoreModule\n\n\n\n\n\nTopArtistComponent\n\nTopArtistComponent\n\nCoreModule -->\n\nTopArtistComponent->CoreModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nCoreModule -->\n\nUserProfileComponent->CoreModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nChatBodyComponent \n\nChatBodyComponent \n\nChatBodyComponent  -->\n\nSharedModule->ChatBodyComponent \n\n\n\n\n\nChatComponent \n\nChatComponent \n\nChatComponent  -->\n\nSharedModule->ChatComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nSharedModule->MenuComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nCoreModule -->\n\nAuthService->CoreModule\n\n\n\n\n\nChatBodyComponent\n\nChatBodyComponent\n\nSharedModule -->\n\nChatBodyComponent->SharedModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nSharedModule -->\n\nChatComponent->SharedModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nSharedModule -->\n\nMenuComponent->SharedModule\n\n\n\n\n\nMiniChatComponent\n\nMiniChatComponent\n\nSharedModule -->\n\nMiniChatComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nChatService\n\nChatService\n\nSharedModule -->\n\nChatService->SharedModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            6 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        13 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            7 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            firebaseConfig   (src/.../app.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebaseConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiKey: 'AIzaSyD04J1HQmN6UzvxJKtcqmBrNHuX6x0hvCQ',\n    authDomain: 'samewave-3b523.firebaseapp.com',\n    databaseURL: 'https://samewave-3b523.firebaseio.com',\n    projectId: 'samewave-3b523',\n    storageBucket: 'samewave-3b523.appspot.com',\n    messagingSenderId: '716018657308'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
